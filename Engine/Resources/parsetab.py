
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'expressionsleft+-left*/BOOLEAN BREAK CONTINUE FUNCTION MAX MIN NUMBER RETURN STRING TAG VARIABLE WORDstatement : VARIABLE "=" expressionfunction_call : FUNCTION parameters scope\n                     | FUNCTION parameters tag_list\n                     | FUNCTION parameters\n                     | FUNCTIONtag : TAG expressiontag_list : tag \'#\' scope tag_list\n                | tag \'#\' scopescope : \'{\' expressions \'}\'expressions : statement expressions\n                   | statementparameters : \'(\' param_element \')\'\n                  | \'(\' \')\'param_element_pos : WORD \':\' expression \',\' param_element_pos\n                         | WORD \':\' expression \',\'\n                         | WORD \':\' expressionparam_element : expression \',\' param_element\n                     | expression \',\' param_element_pos\n                     | expression \',\'\n                     | expressionstatement : expression\n                 | BREAK\n                 | CONTINUEexpression : function_callexpression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'/\' expressionexpression : \'-\' expressioncomma_expressions : expression \',\' comma_expressions\n                         | expression \',\'\n                         | expressionexpression : MIN \'(\' comma_expressions \')\'\n                  | MAX \'(\' comma_expressions \')\'expression : \'(\' expression \')\'statement : RETURN expression\n                 | RETURNexpression : NUMBER\n                  | BOOLEAN\n                  | STRING\n                  | VARIABLE\n                  | WORD\n                  | scope'
    
_lr_action_items = {'VARIABLE':([0,2,3,4,5,6,7,8,9,11,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,31,32,33,35,36,37,38,39,42,44,45,47,49,51,52,53,54,57,58,60,64,65,],[3,3,-41,-21,-22,-23,27,-24,27,27,-38,-39,-40,-42,-43,-5,3,27,27,27,27,27,-36,-41,-29,27,27,-4,27,-1,-25,-26,-27,-28,-35,-2,-3,27,-13,-9,-33,27,-34,-12,27,-8,-7,27,]),'BREAK':([0,2,3,4,5,6,7,8,13,14,15,16,17,18,19,26,27,28,32,35,36,37,38,39,42,44,45,49,51,52,54,57,60,64,],[5,5,-41,-21,-22,-23,-37,-24,-38,-39,-40,-42,-43,-5,5,-36,-41,-29,-4,-1,-25,-26,-27,-28,-35,-2,-3,-13,-9,-33,-34,-12,-8,-7,]),'CONTINUE':([0,2,3,4,5,6,7,8,13,14,15,16,17,18,19,26,27,28,32,35,36,37,38,39,42,44,45,49,51,52,54,57,60,64,],[6,6,-41,-21,-22,-23,-37,-24,-38,-39,-40,-42,-43,-5,6,-36,-41,-29,-4,-1,-25,-26,-27,-28,-35,-2,-3,-13,-9,-33,-34,-12,-8,-7,]),'RETURN':([0,2,3,4,5,6,7,8,13,14,15,16,17,18,19,26,27,28,32,35,36,37,38,39,42,44,45,49,51,52,54,57,60,64,],[7,7,-41,-21,-22,-23,-37,-24,-38,-39,-40,-42,-43,-5,7,-36,-41,-29,-4,-1,-25,-26,-27,-28,-35,-2,-3,-13,-9,-33,-34,-12,-8,-7,]),'-':([0,2,3,4,5,6,7,8,9,11,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,41,42,44,45,47,49,50,51,52,53,54,56,57,58,60,63,64,65,66,],[9,9,-41,23,-22,-23,9,-24,9,9,-38,-39,-40,-42,-43,-5,9,9,9,9,9,9,23,-41,-29,9,23,9,-4,9,23,-25,-26,-27,-28,23,-35,-2,-3,9,-13,23,-9,-33,9,-34,23,-12,9,-8,-42,-7,9,23,]),'MIN':([0,2,3,4,5,6,7,8,9,11,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,31,32,33,35,36,37,38,39,42,44,45,47,49,51,52,53,54,57,58,60,64,65,],[10,10,-41,-21,-22,-23,10,-24,10,10,-38,-39,-40,-42,-43,-5,10,10,10,10,10,10,-36,-41,-29,10,10,-4,10,-1,-25,-26,-27,-28,-35,-2,-3,10,-13,-9,-33,10,-34,-12,10,-8,-7,10,]),'MAX':([0,2,3,4,5,6,7,8,9,11,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,31,32,33,35,36,37,38,39,42,44,45,47,49,51,52,53,54,57,58,60,64,65,],[12,12,-41,-21,-22,-23,12,-24,12,12,-38,-39,-40,-42,-43,-5,12,12,12,12,12,12,-36,-41,-29,12,12,-4,12,-1,-25,-26,-27,-28,-35,-2,-3,12,-13,-9,-33,12,-34,-12,12,-8,-7,12,]),'(':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,31,32,33,35,36,37,38,39,42,44,45,47,49,51,52,53,54,57,58,60,64,65,],[11,11,-41,-21,-22,-23,11,-24,11,29,11,31,-38,-39,-40,-42,-43,33,11,11,11,11,11,11,-36,-41,-29,11,11,-4,11,-1,-25,-26,-27,-28,-35,-2,-3,11,-13,-9,-33,11,-34,-12,11,-8,-7,11,]),'NUMBER':([0,2,3,4,5,6,7,8,9,11,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,31,32,33,35,36,37,38,39,42,44,45,47,49,51,52,53,54,57,58,60,64,65,],[13,13,-41,-21,-22,-23,13,-24,13,13,-38,-39,-40,-42,-43,-5,13,13,13,13,13,13,-36,-41,-29,13,13,-4,13,-1,-25,-26,-27,-28,-35,-2,-3,13,-13,-9,-33,13,-34,-12,13,-8,-7,13,]),'BOOLEAN':([0,2,3,4,5,6,7,8,9,11,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,31,32,33,35,36,37,38,39,42,44,45,47,49,51,52,53,54,57,58,60,64,65,],[14,14,-41,-21,-22,-23,14,-24,14,14,-38,-39,-40,-42,-43,-5,14,14,14,14,14,14,-36,-41,-29,14,14,-4,14,-1,-25,-26,-27,-28,-35,-2,-3,14,-13,-9,-33,14,-34,-12,14,-8,-7,14,]),'STRING':([0,2,3,4,5,6,7,8,9,11,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,31,32,33,35,36,37,38,39,42,44,45,47,49,51,52,53,54,57,58,60,64,65,],[15,15,-41,-21,-22,-23,15,-24,15,15,-38,-39,-40,-42,-43,-5,15,15,15,15,15,15,-36,-41,-29,15,15,-4,15,-1,-25,-26,-27,-28,-35,-2,-3,15,-13,-9,-33,15,-34,-12,15,-8,-7,15,]),'WORD':([0,2,3,4,5,6,7,8,9,11,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,31,32,33,35,36,37,38,39,42,44,45,47,49,51,52,53,54,57,58,60,64,65,67,],[16,16,-41,-21,-22,-23,16,-24,16,16,-38,-39,-40,-42,-43,-5,16,16,16,16,16,16,-36,-41,-29,16,16,-4,16,-1,-25,-26,-27,-28,-35,-2,-3,16,-13,-9,-33,16,-34,-12,63,-8,-7,16,68,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,11,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,31,32,33,35,36,37,38,39,42,44,45,47,49,51,52,53,54,57,58,60,64,65,],[18,18,-41,-21,-22,-23,18,-24,18,18,-38,-39,-40,-42,-43,-5,18,18,18,18,18,18,-36,-41,-29,18,18,-4,18,-1,-25,-26,-27,-28,-35,-2,-3,18,-13,-9,-33,18,-34,-12,18,-8,-7,18,]),'{':([0,2,3,4,5,6,7,8,9,11,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,31,32,33,35,36,37,38,39,42,44,45,47,49,51,52,53,54,55,57,58,60,64,65,],[19,19,-41,-21,-22,-23,19,-24,19,19,-38,-39,-40,-42,-43,-5,19,19,19,19,19,19,-36,-41,-29,19,19,19,19,-1,-25,-26,-27,-28,-35,-2,-3,19,-13,-9,-33,19,-34,19,-12,19,-8,-7,19,]),'$end':([1,2,3,4,5,6,7,8,13,14,15,16,17,18,20,26,27,28,32,35,36,37,38,39,42,44,45,49,51,52,54,57,60,64,],[0,-11,-41,-21,-22,-23,-37,-24,-38,-39,-40,-42,-43,-5,-10,-36,-41,-29,-4,-1,-25,-26,-27,-28,-35,-2,-3,-13,-9,-33,-34,-12,-8,-7,]),'}':([2,3,4,5,6,7,8,13,14,15,16,17,18,20,26,27,28,32,34,35,36,37,38,39,42,44,45,49,51,52,54,57,60,64,],[-11,-41,-21,-22,-23,-37,-24,-38,-39,-40,-42,-43,-5,-10,-36,-41,-29,-4,51,-1,-25,-26,-27,-28,-35,-2,-3,-13,-9,-33,-34,-12,-8,-7,]),'=':([3,],[21,]),'+':([3,4,8,13,14,15,16,17,18,26,27,28,30,32,35,36,37,38,39,41,42,44,45,49,50,51,52,54,56,57,60,63,64,66,],[-41,22,-24,-38,-39,-40,-42,-43,-5,22,-41,-29,22,-4,22,-25,-26,-27,-28,22,-35,-2,-3,-13,22,-9,-33,-34,22,-12,-8,-42,-7,22,]),'*':([3,4,8,13,14,15,16,17,18,26,27,28,30,32,35,36,37,38,39,41,42,44,45,49,50,51,52,54,56,57,60,63,64,66,],[-41,24,-24,-38,-39,-40,-42,-43,-5,24,-41,24,24,-4,24,24,24,-27,-28,24,-35,-2,-3,-13,24,-9,-33,-34,24,-12,-8,-42,-7,24,]),'/':([3,4,8,13,14,15,16,17,18,26,27,28,30,32,35,36,37,38,39,41,42,44,45,49,50,51,52,54,56,57,60,63,64,66,],[-41,25,-24,-38,-39,-40,-42,-43,-5,25,-41,25,25,-4,25,25,25,-27,-28,25,-35,-2,-3,-13,25,-9,-33,-34,25,-12,-8,-42,-7,25,]),')':([8,13,14,15,16,17,18,27,28,30,32,33,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,57,58,59,60,61,62,63,64,66,67,69,],[-24,-38,-39,-40,-42,-43,-5,-41,-29,42,-4,49,-25,-26,-27,-28,52,-32,-35,54,-2,-3,57,-13,-20,-9,-33,-31,-34,-12,-19,-30,-8,-17,-18,-42,-7,-16,-15,-14,]),',':([8,13,14,15,16,17,18,27,28,32,36,37,38,39,41,42,44,45,49,50,51,52,54,57,60,63,64,66,],[-24,-38,-39,-40,-42,-43,-5,-41,-29,-4,-25,-26,-27,-28,53,-35,-2,-3,-13,58,-9,-33,-34,-12,-8,-42,-7,67,]),'#':([8,13,14,15,16,17,18,27,28,32,36,37,38,39,42,44,45,46,49,51,52,54,56,57,60,64,],[-24,-38,-39,-40,-42,-43,-5,-41,-29,-4,-25,-26,-27,-28,-35,-2,-3,55,-13,-9,-33,-34,-6,-12,-8,-7,]),'TAG':([32,49,51,57,60,],[47,-13,-9,-12,47,]),':':([63,68,],[65,65,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expressions':([0,2,19,],[1,20,34,]),'statement':([0,2,19,],[2,2,2,]),'expression':([0,2,7,9,11,19,21,22,23,24,25,29,31,33,47,53,58,65,],[4,4,26,28,30,4,35,36,37,38,39,41,41,50,56,41,50,66,]),'function_call':([0,2,7,9,11,19,21,22,23,24,25,29,31,33,47,53,58,65,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'scope':([0,2,7,9,11,19,21,22,23,24,25,29,31,32,33,47,53,55,58,65,],[17,17,17,17,17,17,17,17,17,17,17,17,17,44,17,17,17,60,17,17,]),'parameters':([18,],[32,]),'comma_expressions':([29,31,53,],[40,43,59,]),'tag_list':([32,60,],[45,64,]),'tag':([32,60,],[46,46,]),'param_element':([33,58,],[48,61,]),'param_element_pos':([58,67,],[62,69,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expressions","S'",1,None,None,None),
  ('statement -> VARIABLE = expression','statement',3,'p_statement_assign','EngineScript.py',96),
  ('function_call -> FUNCTION parameters scope','function_call',3,'p_function_call','EngineScript.py',105),
  ('function_call -> FUNCTION parameters tag_list','function_call',3,'p_function_call','EngineScript.py',106),
  ('function_call -> FUNCTION parameters','function_call',2,'p_function_call','EngineScript.py',107),
  ('function_call -> FUNCTION','function_call',1,'p_function_call','EngineScript.py',108),
  ('tag -> TAG expression','tag',2,'p_tag','EngineScript.py',113),
  ('tag_list -> tag # scope tag_list','tag_list',4,'p_tag_list','EngineScript.py',117),
  ('tag_list -> tag # scope','tag_list',3,'p_tag_list','EngineScript.py',118),
  ('scope -> { expressions }','scope',3,'p_scope','EngineScript.py',122),
  ('expressions -> statement expressions','expressions',2,'p_statements','EngineScript.py',126),
  ('expressions -> statement','expressions',1,'p_statements','EngineScript.py',127),
  ('parameters -> ( param_element )','parameters',3,'p_parameters','EngineScript.py',131),
  ('parameters -> ( )','parameters',2,'p_parameters','EngineScript.py',132),
  ('param_element_pos -> WORD : expression , param_element_pos','param_element_pos',5,'p_param_element2','EngineScript.py',136),
  ('param_element_pos -> WORD : expression ,','param_element_pos',4,'p_param_element2','EngineScript.py',137),
  ('param_element_pos -> WORD : expression','param_element_pos',3,'p_param_element2','EngineScript.py',138),
  ('param_element -> expression , param_element','param_element',3,'p_param_element','EngineScript.py',142),
  ('param_element -> expression , param_element_pos','param_element',3,'p_param_element','EngineScript.py',143),
  ('param_element -> expression ,','param_element',2,'p_param_element','EngineScript.py',144),
  ('param_element -> expression','param_element',1,'p_param_element','EngineScript.py',145),
  ('statement -> expression','statement',1,'p_statement_expr','EngineScript.py',149),
  ('statement -> BREAK','statement',1,'p_statement_expr','EngineScript.py',150),
  ('statement -> CONTINUE','statement',1,'p_statement_expr','EngineScript.py',151),
  ('expression -> function_call','expression',1,'p_expression_function_call','EngineScript.py',155),
  ('expression -> expression + expression','expression',3,'p_expression_binop','EngineScript.py',159),
  ('expression -> expression - expression','expression',3,'p_expression_binop','EngineScript.py',160),
  ('expression -> expression * expression','expression',3,'p_expression_binop','EngineScript.py',161),
  ('expression -> expression / expression','expression',3,'p_expression_binop','EngineScript.py',162),
  ('expression -> - expression','expression',2,'p_expression_uminus','EngineScript.py',189),
  ('comma_expressions -> expression , comma_expressions','comma_expressions',3,'p_comma_sep_expressions','EngineScript.py',201),
  ('comma_expressions -> expression ,','comma_expressions',2,'p_comma_sep_expressions','EngineScript.py',202),
  ('comma_expressions -> expression','comma_expressions',1,'p_comma_sep_expressions','EngineScript.py',203),
  ('expression -> MIN ( comma_expressions )','expression',4,'p_expression_min','EngineScript.py',210),
  ('expression -> MAX ( comma_expressions )','expression',4,'p_expression_min','EngineScript.py',211),
  ('expression -> ( expression )','expression',3,'p_expression_group','EngineScript.py',223),
  ('statement -> RETURN expression','statement',2,'p_expression_return','EngineScript.py',228),
  ('statement -> RETURN','statement',1,'p_expression_return','EngineScript.py',229),
  ('expression -> NUMBER','expression',1,'p_expression_other','EngineScript.py',236),
  ('expression -> BOOLEAN','expression',1,'p_expression_other','EngineScript.py',237),
  ('expression -> STRING','expression',1,'p_expression_other','EngineScript.py',238),
  ('expression -> VARIABLE','expression',1,'p_expression_other','EngineScript.py',239),
  ('expression -> WORD','expression',1,'p_expression_other','EngineScript.py',240),
  ('expression -> scope','expression',1,'p_expression_other','EngineScript.py',241),
]
