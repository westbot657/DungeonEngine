
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "expressionsleft+-left*/leftLTLEGTGEEENEleftANDORAND BOOLEAN BREAK CONTINUE EE ELSE ELSEIF FUNCTION GE GT IF LE LT MACRO MAX MIN NE NOT NUMBER OR PASS RETURN STRING TAG VARIABLE WORDexpression : PASSexpression : MACRO '=' expression\n                  | MACROatom : VARIABLE '=' expression\n            | VARIABLEelse_branch : ELSE scopeelif_branch : ELSEIF '(' expression ')' scope elif_branch\n                   | ELSEIF '(' expression ')' scope else_branch\n                   | ELSEIF '(' expression ')' scopeif_condition : IF '(' expression ')' scope elif_branch\n                    | IF '(' expression ')' scope else_branch\n                    | IF '(' expression ')' scopefunction_call : FUNCTION parameters scope\n                     | FUNCTION parameters tag_list\n                     | FUNCTION parameters\n                     | FUNCTIONtag : TAG expressiontag_list : tag '#' scope tag_list\n                | tag '#' scopescope : '{' expressions '}'expressions : statement expressions\n                   | statementparameters : '(' param_element ')'\n                  | '(' ')'param_element_pos : WORD '=' expression ',' param_element_pos\n                         | WORD '=' expression ','\n                         | WORD '=' expressionparam_element : expression ',' param_element\n                     | expression ',' param_element_pos\n                     | expression ','\n                     | expressionstatement : BREAKstatement : expression\n                 | if_conditionatom : function_callcomp : NOT comp\n            | arith LT arith\n            | arith LE arith\n            | arith GT arith\n            | arith GE arith\n            | arith EE arith\n            | arith NE arith\n            | comp AND comp\n            | comp OR comp\n            | aritharith : atom '+' atom\n             | atom '-' atom\n             | atom '*' atom\n             | atom '/' atom\n             | atomatom : '-' atomcomma_expressions : expression ',' comma_expressions\n                         | expression ','\n                         | expressionarith : MIN '(' comma_expressions ')'\n             | MAX '(' comma_expressions ')'atom : '(' expression ')'statement : RETURN expression\n                 | RETURNtable_contents : STRING ':' expression ',' table_contents\n                      | NUMBER ':' expression ',' table_contents\n                      | STRING ':' expression ','\n                      | NUMBER ':' expression ','\n                      | STRING ':' expression\n                      | NUMBER ':' expressiontable : '%' '[' comma_expressions ']'\n             | '%' '{' table_contents '}'atom : NUMBER\n            | BOOLEAN\n            | STRING\n            | table\n            | WORD\n            | scopeexpression : comp"
    
_lr_action_items = {'BREAK':([0,2,3,4,5,6,7,8,9,12,14,15,19,20,21,22,23,24,25,26,28,30,36,47,51,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,80,86,88,90,93,95,96,99,101,107,108,111,116,125,126,127,],[3,3,-32,-33,-34,-59,-1,-3,-74,-73,-45,-50,-5,-35,-68,-69,-70,-71,-72,-16,3,-58,-36,-51,-15,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,-24,-20,-55,-56,-23,-66,-67,-12,-19,-10,-11,-18,-6,-9,-7,-8,]),'RETURN':([0,2,3,4,5,6,7,8,9,12,14,15,19,20,21,22,23,24,25,26,28,30,36,47,51,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,80,86,88,90,93,95,96,99,101,107,108,111,116,125,126,127,],[6,6,-32,-33,-34,-59,-1,-3,-74,-73,-45,-50,-5,-35,-68,-69,-70,-71,-72,-16,6,-58,-36,-51,-15,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,-24,-20,-55,-56,-23,-66,-67,-12,-19,-10,-11,-18,-6,-9,-7,-8,]),'PASS':([0,2,3,4,5,6,7,8,9,11,12,14,15,19,20,21,22,23,24,25,26,28,30,31,34,36,47,48,49,50,51,52,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,78,80,86,88,89,90,93,94,95,96,97,98,99,101,107,108,111,112,115,116,125,126,127,],[7,7,-32,-33,-34,7,-1,-3,-74,7,-73,-45,-50,-5,-35,-68,-69,-70,-71,-72,-16,7,-58,7,7,-36,-51,7,7,7,-15,7,7,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,7,-24,-20,-55,7,-56,-23,7,-66,-67,7,7,-12,-19,-10,-11,-18,7,7,-6,-9,-7,-8,]),'MACRO':([0,2,3,4,5,6,7,8,9,11,12,14,15,19,20,21,22,23,24,25,26,28,30,31,34,36,47,48,49,50,51,52,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,78,80,86,88,89,90,93,94,95,96,97,98,99,101,107,108,111,112,115,116,125,126,127,],[8,8,-32,-33,-34,8,-1,-3,-74,8,-73,-45,-50,-5,-35,-68,-69,-70,-71,-72,-16,8,-58,8,8,-36,-51,8,8,8,-15,8,8,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,8,-24,-20,-55,8,-56,-23,8,-66,-67,8,8,-12,-19,-10,-11,-18,8,8,-6,-9,-7,-8,]),'IF':([0,2,3,4,5,6,7,8,9,12,14,15,19,20,21,22,23,24,25,26,28,30,36,47,51,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,80,86,88,90,93,95,96,99,101,107,108,111,116,125,126,127,],[10,10,-32,-33,-34,-59,-1,-3,-74,-73,-45,-50,-5,-35,-68,-69,-70,-71,-72,-16,10,-58,-36,-51,-15,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,-24,-20,-55,-56,-23,-66,-67,-12,-19,-10,-11,-18,-6,-9,-7,-8,]),'NOT':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,19,20,21,22,23,24,25,26,28,30,31,32,33,34,36,47,48,49,50,51,52,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,78,80,86,88,89,90,93,94,95,96,97,98,99,101,107,108,111,112,115,116,125,126,127,],[13,13,-32,-33,-34,13,-1,-3,-74,13,-73,13,-45,-50,-5,-35,-68,-69,-70,-71,-72,-16,13,-58,13,13,13,13,-36,-51,13,13,13,-15,13,13,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,13,-24,-20,-55,13,-56,-23,13,-66,-67,13,13,-12,-19,-10,-11,-18,13,13,-6,-9,-7,-8,]),'MIN':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,19,20,21,22,23,24,25,26,28,30,31,32,33,34,36,37,38,39,40,41,42,47,48,49,50,51,52,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,78,80,86,88,89,90,93,94,95,96,97,98,99,101,107,108,111,112,115,116,125,126,127,],[17,17,-32,-33,-34,17,-1,-3,-74,17,-73,17,-45,-50,-5,-35,-68,-69,-70,-71,-72,-16,17,-58,17,17,17,17,-36,17,17,17,17,17,17,-51,17,17,17,-15,17,17,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,17,-24,-20,-55,17,-56,-23,17,-66,-67,17,17,-12,-19,-10,-11,-18,17,17,-6,-9,-7,-8,]),'MAX':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,19,20,21,22,23,24,25,26,28,30,31,32,33,34,36,37,38,39,40,41,42,47,48,49,50,51,52,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,78,80,86,88,89,90,93,94,95,96,97,98,99,101,107,108,111,112,115,116,125,126,127,],[18,18,-32,-33,-34,18,-1,-3,-74,18,-73,18,-45,-50,-5,-35,-68,-69,-70,-71,-72,-16,18,-58,18,18,18,18,-36,18,18,18,18,18,18,-51,18,18,18,-15,18,18,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,18,-24,-20,-55,18,-56,-23,18,-66,-67,18,18,-12,-19,-10,-11,-18,18,18,-6,-9,-7,-8,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,19,20,21,22,23,24,25,26,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,78,80,86,88,89,90,93,94,95,96,97,98,99,101,107,108,111,112,115,116,125,126,127,],[19,19,-32,-33,-34,19,-1,-3,-74,19,-73,19,-45,-50,19,-5,-35,-68,-69,-70,-71,-72,-16,19,-58,19,19,19,19,-36,19,19,19,19,19,19,19,19,19,19,-51,19,19,19,-15,19,19,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,19,-24,-20,-55,19,-56,-23,19,-66,-67,19,19,-12,-19,-10,-11,-18,19,19,-6,-9,-7,-8,]),'-':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,19,20,21,22,23,24,25,26,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,78,80,86,88,89,90,93,94,95,96,97,98,99,101,104,107,108,111,112,115,116,125,126,127,],[16,16,-32,-33,-34,16,-1,-3,-74,16,-73,16,-45,44,16,-5,-35,-68,-69,-70,-71,-72,-16,16,-58,16,16,16,16,-36,16,16,16,16,16,16,16,16,16,16,-51,16,16,16,-15,16,16,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,16,-24,-20,-55,16,-56,-23,16,-66,-67,16,16,-12,-19,-72,-10,-11,-18,16,16,-6,-9,-7,-8,]),'(':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,78,80,86,88,89,90,93,94,95,96,97,98,99,101,107,108,109,111,112,115,116,125,126,127,],[11,11,-32,-33,-34,11,-1,-3,-74,34,11,-73,11,-45,-50,11,48,49,-5,-35,-68,-69,-70,-71,-72,52,11,-58,11,11,11,11,-36,11,11,11,11,11,11,11,11,11,11,-51,11,11,11,-15,11,11,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,11,-24,-20,-55,11,-56,-23,11,-66,-67,11,11,-12,-19,-10,-11,115,-18,11,11,-6,-9,-7,-8,]),'NUMBER':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,19,20,21,22,23,24,25,26,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,78,80,86,88,89,90,93,94,95,96,97,98,99,101,107,108,111,112,113,114,115,116,125,126,127,],[21,21,-32,-33,-34,21,-1,-3,-74,21,-73,21,-45,-50,21,-5,-35,-68,-69,-70,-71,-72,-16,21,-58,21,21,21,21,-36,21,21,21,21,21,21,21,21,21,21,-51,21,21,21,-15,21,21,85,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,21,-24,-20,-55,21,-56,-23,21,-66,-67,21,21,-12,-19,-10,-11,-18,21,85,85,21,-6,-9,-7,-8,]),'BOOLEAN':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,19,20,21,22,23,24,25,26,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,78,80,86,88,89,90,93,94,95,96,97,98,99,101,107,108,111,112,115,116,125,126,127,],[22,22,-32,-33,-34,22,-1,-3,-74,22,-73,22,-45,-50,22,-5,-35,-68,-69,-70,-71,-72,-16,22,-58,22,22,22,22,-36,22,22,22,22,22,22,22,22,22,22,-51,22,22,22,-15,22,22,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,22,-24,-20,-55,22,-56,-23,22,-66,-67,22,22,-12,-19,-10,-11,-18,22,22,-6,-9,-7,-8,]),'STRING':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,19,20,21,22,23,24,25,26,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,78,80,86,88,89,90,93,94,95,96,97,98,99,101,107,108,111,112,113,114,115,116,125,126,127,],[23,23,-32,-33,-34,23,-1,-3,-74,23,-73,23,-45,-50,23,-5,-35,-68,-69,-70,-71,-72,-16,23,-58,23,23,23,23,-36,23,23,23,23,23,23,23,23,23,23,-51,23,23,23,-15,23,23,84,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,23,-24,-20,-55,23,-56,-23,23,-66,-67,23,23,-12,-19,-10,-11,-18,23,84,84,23,-6,-9,-7,-8,]),'WORD':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,19,20,21,22,23,24,25,26,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,78,80,86,88,89,90,93,94,95,96,97,98,99,101,107,108,111,112,115,116,121,125,126,127,],[25,25,-32,-33,-34,25,-1,-3,-74,25,-73,25,-45,-50,25,-5,-35,-68,-69,-70,-71,-72,-16,25,-58,25,25,25,25,-36,25,25,25,25,25,25,25,25,25,25,-51,25,25,25,-15,25,25,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,25,-24,-20,-55,25,-56,-23,104,-66,-67,25,25,-12,-19,-10,-11,-18,25,25,-6,123,-9,-7,-8,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,19,20,21,22,23,24,25,26,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,78,80,86,88,89,90,93,94,95,96,97,98,99,101,107,108,111,112,115,116,125,126,127,],[26,26,-32,-33,-34,26,-1,-3,-74,26,-73,26,-45,-50,26,-5,-35,-68,-69,-70,-71,-72,-16,26,-58,26,26,26,26,-36,26,26,26,26,26,26,26,26,26,26,-51,26,26,26,-15,26,26,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,26,-24,-20,-55,26,-56,-23,26,-66,-67,26,26,-12,-19,-10,-11,-18,26,26,-6,-9,-7,-8,]),'%':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,19,20,21,22,23,24,25,26,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,78,80,86,88,89,90,93,94,95,96,97,98,99,101,107,108,111,112,115,116,125,126,127,],[27,27,-32,-33,-34,27,-1,-3,-74,27,-73,27,-45,-50,27,-5,-35,-68,-69,-70,-71,-72,-16,27,-58,27,27,27,27,-36,27,27,27,27,27,27,27,27,27,27,-51,27,27,27,-15,27,27,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,27,-24,-20,-55,27,-56,-23,27,-66,-67,27,27,-12,-19,-10,-11,-18,27,27,-6,-9,-7,-8,]),'{':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,78,80,86,87,88,89,90,91,93,94,95,96,97,98,99,101,107,108,110,111,112,115,116,122,125,126,127,],[28,28,-32,-33,-34,28,-1,-3,-74,28,-73,28,-45,-50,28,-5,-35,-68,-69,-70,-71,-72,-16,54,28,-58,28,28,28,28,-36,28,28,28,28,28,28,28,28,28,28,-51,28,28,28,28,28,28,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,28,-24,-20,28,-55,28,-56,28,-23,28,-66,-67,28,28,-12,-19,-10,-11,28,-18,28,28,-6,28,-9,-7,-8,]),'$end':([1,2,3,4,5,6,7,8,9,12,14,15,19,20,21,22,23,24,25,26,29,30,36,47,51,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,80,86,88,90,93,95,96,99,101,107,108,111,116,125,126,127,],[0,-22,-32,-33,-34,-59,-1,-3,-74,-73,-45,-50,-5,-35,-68,-69,-70,-71,-72,-16,-21,-58,-36,-51,-15,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,-24,-20,-55,-56,-23,-66,-67,-12,-19,-10,-11,-18,-6,-9,-7,-8,]),'}':([2,3,4,5,6,7,8,9,12,14,15,19,20,21,22,23,24,25,26,29,30,36,47,51,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,80,83,86,88,90,93,95,96,99,101,105,106,107,108,111,113,114,116,118,119,125,126,127,],[-22,-32,-33,-34,-59,-1,-3,-74,-73,-45,-50,-5,-35,-68,-69,-70,-71,-72,-16,-21,-58,-36,-51,-15,86,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,-24,96,-20,-55,-56,-23,-66,-67,-12,-19,-64,-65,-10,-11,-18,-62,-63,-6,-60,-61,-9,-7,-8,]),')':([7,8,9,12,14,15,19,20,21,22,23,24,25,26,35,36,47,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,86,88,89,90,93,94,95,96,100,101,102,103,104,111,117,120,121,124,],[-1,-3,-74,-73,-45,-50,-5,-35,-68,-69,-70,-71,-72,-16,60,-36,-51,-15,80,-2,-43,-44,87,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,88,-54,90,-4,-13,-14,93,-24,-31,-20,-55,-53,-56,-23,-30,-66,-67,-52,-19,-28,-29,-72,-18,-27,122,-26,-25,]),'AND':([7,8,9,12,14,15,19,20,21,22,23,24,25,26,36,47,51,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,80,86,88,90,93,95,96,101,104,111,],[-1,-3,32,-73,-45,-50,-5,-35,-68,-69,-70,-71,-72,-16,32,-51,-15,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,-24,-20,-55,-56,-23,-66,-67,-19,-72,-18,]),'OR':([7,8,9,12,14,15,19,20,21,22,23,24,25,26,36,47,51,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,80,86,88,90,93,95,96,101,104,111,],[-1,-3,33,-73,-45,-50,-5,-35,-68,-69,-70,-71,-72,-16,33,-51,-15,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,-24,-20,-55,-56,-23,-66,-67,-19,-72,-18,]),',':([7,8,9,12,14,15,19,20,21,22,23,24,25,26,36,47,51,56,57,58,60,61,62,63,64,65,66,67,68,69,70,72,74,75,76,80,81,86,88,90,93,95,96,101,104,105,106,111,117,],[-1,-3,-74,-73,-45,-50,-5,-35,-68,-69,-70,-71,-72,-16,-36,-51,-15,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,89,-4,-13,-14,-24,94,-20,-55,-56,-23,-66,-67,-19,-72,113,114,-18,121,]),'+':([7,8,9,12,14,15,19,20,21,22,23,24,25,26,36,47,51,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,80,86,88,90,93,95,96,101,104,111,],[-1,-3,-74,-73,-45,43,-5,-35,-68,-69,-70,-71,-72,-16,-36,-51,-15,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,-24,-20,-55,-56,-23,-66,-67,-19,-72,-18,]),'*':([7,8,9,12,14,15,19,20,21,22,23,24,25,26,36,47,51,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,80,86,88,90,93,95,96,101,104,111,],[-1,-3,-74,-73,-45,45,-5,-35,-68,-69,-70,-71,-72,-16,-36,-51,-15,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,-24,-20,-55,-56,-23,-66,-67,-19,-72,-18,]),'/':([7,8,9,12,14,15,19,20,21,22,23,24,25,26,36,47,51,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,80,86,88,90,93,95,96,101,104,111,],[-1,-3,-74,-73,-45,46,-5,-35,-68,-69,-70,-71,-72,-16,-36,-51,-15,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,-24,-20,-55,-56,-23,-66,-67,-19,-72,-18,]),'LT':([7,8,9,12,14,15,19,20,21,22,23,24,25,26,36,47,51,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,80,86,88,90,93,95,96,101,104,111,],[-1,-3,-74,-73,37,-50,-5,-35,-68,-69,-70,-71,-72,-16,-36,-51,-15,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,-24,-20,-55,-56,-23,-66,-67,-19,-72,-18,]),'LE':([7,8,9,12,14,15,19,20,21,22,23,24,25,26,36,47,51,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,80,86,88,90,93,95,96,101,104,111,],[-1,-3,-74,-73,38,-50,-5,-35,-68,-69,-70,-71,-72,-16,-36,-51,-15,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,-24,-20,-55,-56,-23,-66,-67,-19,-72,-18,]),'GT':([7,8,9,12,14,15,19,20,21,22,23,24,25,26,36,47,51,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,80,86,88,90,93,95,96,101,104,111,],[-1,-3,-74,-73,39,-50,-5,-35,-68,-69,-70,-71,-72,-16,-36,-51,-15,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,-24,-20,-55,-56,-23,-66,-67,-19,-72,-18,]),'GE':([7,8,9,12,14,15,19,20,21,22,23,24,25,26,36,47,51,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,80,86,88,90,93,95,96,101,104,111,],[-1,-3,-74,-73,40,-50,-5,-35,-68,-69,-70,-71,-72,-16,-36,-51,-15,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,-24,-20,-55,-56,-23,-66,-67,-19,-72,-18,]),'EE':([7,8,9,12,14,15,19,20,21,22,23,24,25,26,36,47,51,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,80,86,88,90,93,95,96,101,104,111,],[-1,-3,-74,-73,41,-50,-5,-35,-68,-69,-70,-71,-72,-16,-36,-51,-15,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,-24,-20,-55,-56,-23,-66,-67,-19,-72,-18,]),'NE':([7,8,9,12,14,15,19,20,21,22,23,24,25,26,36,47,51,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,80,86,88,90,93,95,96,101,104,111,],[-1,-3,-74,-73,42,-50,-5,-35,-68,-69,-70,-71,-72,-16,-36,-51,-15,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,-24,-20,-55,-56,-23,-66,-67,-19,-72,-18,]),']':([7,8,9,12,14,15,19,20,21,22,23,24,25,26,36,47,51,56,57,58,60,61,62,63,64,65,66,67,68,69,70,72,74,75,76,80,82,86,88,89,90,93,95,96,100,101,111,],[-1,-3,-74,-73,-45,-50,-5,-35,-68,-69,-70,-71,-72,-16,-36,-51,-15,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-54,-4,-13,-14,-24,95,-20,-55,-53,-56,-23,-66,-67,-52,-19,-18,]),'#':([7,8,9,12,14,15,19,20,21,22,23,24,25,26,36,47,51,56,57,58,60,61,62,63,64,65,66,67,68,69,70,74,75,76,77,80,86,88,90,92,93,95,96,101,111,],[-1,-3,-74,-73,-45,-50,-5,-35,-68,-69,-70,-71,-72,-16,-36,-51,-15,-2,-43,-44,-57,-37,-38,-39,-40,-41,-42,-46,-47,-48,-49,-4,-13,-14,91,-24,-20,-55,-56,-17,-23,-66,-67,-19,-18,]),'=':([8,19,104,123,],[31,50,112,112,]),'[':([27,],[53,]),'TAG':([51,80,86,93,101,],[78,-24,-20,-23,78,]),':':([84,85,],[97,98,]),'ELSEIF':([86,99,125,],[-20,109,109,]),'ELSE':([86,99,125,],[-20,110,110,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expressions':([0,2,28,],[1,29,55,]),'statement':([0,2,28,],[2,2,2,]),'expression':([0,2,6,11,28,31,34,48,49,50,52,53,78,89,94,97,98,112,115,],[4,4,30,35,4,56,59,72,72,74,81,72,92,72,81,105,106,117,120,]),'if_condition':([0,2,28,],[5,5,5,]),'comp':([0,2,6,11,13,28,31,32,33,34,48,49,50,52,53,78,89,94,97,98,112,115,],[9,9,9,9,36,9,9,57,58,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'scope':([0,2,6,11,13,16,28,31,32,33,34,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,78,87,89,91,94,97,98,110,112,115,122,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,75,12,12,12,99,12,101,12,12,12,116,12,12,125,]),'arith':([0,2,6,11,13,28,31,32,33,34,37,38,39,40,41,42,48,49,50,52,53,78,89,94,97,98,112,115,],[14,14,14,14,14,14,14,14,14,14,61,62,63,64,65,66,14,14,14,14,14,14,14,14,14,14,14,14,]),'atom':([0,2,6,11,13,16,28,31,32,33,34,37,38,39,40,41,42,43,44,45,46,48,49,50,52,53,78,89,94,97,98,112,115,],[15,15,15,15,15,47,15,15,15,15,15,15,15,15,15,15,15,67,68,69,70,15,15,15,15,15,15,15,15,15,15,15,15,]),'function_call':([0,2,6,11,13,16,28,31,32,33,34,37,38,39,40,41,42,43,44,45,46,48,49,50,52,53,78,89,94,97,98,112,115,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'table':([0,2,6,11,13,16,28,31,32,33,34,37,38,39,40,41,42,43,44,45,46,48,49,50,52,53,78,89,94,97,98,112,115,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'parameters':([26,],[51,]),'comma_expressions':([48,49,53,89,],[71,73,82,100,]),'tag_list':([51,101,],[76,111,]),'tag':([51,101,],[77,77,]),'param_element':([52,94,],[79,102,]),'table_contents':([54,113,114,],[83,118,119,]),'param_element_pos':([94,121,],[103,124,]),'elif_branch':([99,125,],[107,126,]),'else_branch':([99,125,],[108,127,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expressions","S'",1,None,None,None),
  ('expression -> PASS','expression',1,'p_pass','EngineScript.py',167),
  ('expression -> MACRO = expression','expression',3,'p_macro_statement','EngineScript.py',171),
  ('expression -> MACRO','expression',1,'p_macro_statement','EngineScript.py',172),
  ('atom -> VARIABLE = expression','atom',3,'p_statement_assign','EngineScript.py',183),
  ('atom -> VARIABLE','atom',1,'p_statement_assign','EngineScript.py',184),
  ('else_branch -> ELSE scope','else_branch',2,'p_else_branch','EngineScript.py',196),
  ('elif_branch -> ELSEIF ( expression ) scope elif_branch','elif_branch',6,'p_elif_branch','EngineScript.py',202),
  ('elif_branch -> ELSEIF ( expression ) scope else_branch','elif_branch',6,'p_elif_branch','EngineScript.py',203),
  ('elif_branch -> ELSEIF ( expression ) scope','elif_branch',5,'p_elif_branch','EngineScript.py',204),
  ('if_condition -> IF ( expression ) scope elif_branch','if_condition',6,'p_if_statement','EngineScript.py',216),
  ('if_condition -> IF ( expression ) scope else_branch','if_condition',6,'p_if_statement','EngineScript.py',217),
  ('if_condition -> IF ( expression ) scope','if_condition',5,'p_if_statement','EngineScript.py',218),
  ('function_call -> FUNCTION parameters scope','function_call',3,'p_function_call','EngineScript.py',228),
  ('function_call -> FUNCTION parameters tag_list','function_call',3,'p_function_call','EngineScript.py',229),
  ('function_call -> FUNCTION parameters','function_call',2,'p_function_call','EngineScript.py',230),
  ('function_call -> FUNCTION','function_call',1,'p_function_call','EngineScript.py',231),
  ('tag -> TAG expression','tag',2,'p_tag','EngineScript.py',421),
  ('tag_list -> tag # scope tag_list','tag_list',4,'p_tag_list','EngineScript.py',428),
  ('tag_list -> tag # scope','tag_list',3,'p_tag_list','EngineScript.py',429),
  ('scope -> { expressions }','scope',3,'p_scope','EngineScript.py',443),
  ('expressions -> statement expressions','expressions',2,'p_statements','EngineScript.py',447),
  ('expressions -> statement','expressions',1,'p_statements','EngineScript.py',448),
  ('parameters -> ( param_element )','parameters',3,'p_parameters','EngineScript.py',471),
  ('parameters -> ( )','parameters',2,'p_parameters','EngineScript.py',472),
  ('param_element_pos -> WORD = expression , param_element_pos','param_element_pos',5,'p_param_element2','EngineScript.py',479),
  ('param_element_pos -> WORD = expression ,','param_element_pos',4,'p_param_element2','EngineScript.py',480),
  ('param_element_pos -> WORD = expression','param_element_pos',3,'p_param_element2','EngineScript.py',481),
  ('param_element -> expression , param_element','param_element',3,'p_param_element','EngineScript.py',492),
  ('param_element -> expression , param_element_pos','param_element',3,'p_param_element','EngineScript.py',493),
  ('param_element -> expression ,','param_element',2,'p_param_element','EngineScript.py',494),
  ('param_element -> expression','param_element',1,'p_param_element','EngineScript.py',495),
  ('statement -> BREAK','statement',1,'p_statement_break','EngineScript.py',506),
  ('statement -> expression','statement',1,'p_statement_expr','EngineScript.py',510),
  ('statement -> if_condition','statement',1,'p_statement_expr','EngineScript.py',511),
  ('atom -> function_call','atom',1,'p_expression_function_call','EngineScript.py',515),
  ('comp -> NOT comp','comp',2,'p_comp_expression','EngineScript.py',519),
  ('comp -> arith LT arith','comp',3,'p_comp_expression','EngineScript.py',520),
  ('comp -> arith LE arith','comp',3,'p_comp_expression','EngineScript.py',521),
  ('comp -> arith GT arith','comp',3,'p_comp_expression','EngineScript.py',522),
  ('comp -> arith GE arith','comp',3,'p_comp_expression','EngineScript.py',523),
  ('comp -> arith EE arith','comp',3,'p_comp_expression','EngineScript.py',524),
  ('comp -> arith NE arith','comp',3,'p_comp_expression','EngineScript.py',525),
  ('comp -> comp AND comp','comp',3,'p_comp_expression','EngineScript.py',526),
  ('comp -> comp OR comp','comp',3,'p_comp_expression','EngineScript.py',527),
  ('comp -> arith','comp',1,'p_comp_expression','EngineScript.py',528),
  ('arith -> atom + atom','arith',3,'p_expression_binop','EngineScript.py',577),
  ('arith -> atom - atom','arith',3,'p_expression_binop','EngineScript.py',578),
  ('arith -> atom * atom','arith',3,'p_expression_binop','EngineScript.py',579),
  ('arith -> atom / atom','arith',3,'p_expression_binop','EngineScript.py',580),
  ('arith -> atom','arith',1,'p_expression_binop','EngineScript.py',581),
  ('atom -> - atom','atom',2,'p_expression_uminus','EngineScript.py',611),
  ('comma_expressions -> expression , comma_expressions','comma_expressions',3,'p_comma_sep_expressions','EngineScript.py',622),
  ('comma_expressions -> expression ,','comma_expressions',2,'p_comma_sep_expressions','EngineScript.py',623),
  ('comma_expressions -> expression','comma_expressions',1,'p_comma_sep_expressions','EngineScript.py',624),
  ('arith -> MIN ( comma_expressions )','arith',4,'p_expression_min','EngineScript.py',631),
  ('arith -> MAX ( comma_expressions )','arith',4,'p_expression_min','EngineScript.py',632),
  ('atom -> ( expression )','atom',3,'p_expression_group','EngineScript.py',644),
  ('statement -> RETURN expression','statement',2,'p_expression_return','EngineScript.py',648),
  ('statement -> RETURN','statement',1,'p_expression_return','EngineScript.py',649),
  ('table_contents -> STRING : expression , table_contents','table_contents',5,'p_table_contents','EngineScript.py',656),
  ('table_contents -> NUMBER : expression , table_contents','table_contents',5,'p_table_contents','EngineScript.py',657),
  ('table_contents -> STRING : expression ,','table_contents',4,'p_table_contents','EngineScript.py',658),
  ('table_contents -> NUMBER : expression ,','table_contents',4,'p_table_contents','EngineScript.py',659),
  ('table_contents -> STRING : expression','table_contents',3,'p_table_contents','EngineScript.py',660),
  ('table_contents -> NUMBER : expression','table_contents',3,'p_table_contents','EngineScript.py',661),
  ('table -> % [ comma_expressions ]','table',4,'p_table','EngineScript.py',673),
  ('table -> % { table_contents }','table',4,'p_table','EngineScript.py',674),
  ('atom -> NUMBER','atom',1,'p_expression_other','EngineScript.py',689),
  ('atom -> BOOLEAN','atom',1,'p_expression_other','EngineScript.py',690),
  ('atom -> STRING','atom',1,'p_expression_other','EngineScript.py',691),
  ('atom -> table','atom',1,'p_expression_other','EngineScript.py',692),
  ('atom -> WORD','atom',1,'p_expression_other','EngineScript.py',693),
  ('atom -> scope','atom',1,'p_expression_other','EngineScript.py',694),
  ('expression -> comp','expression',1,'p_expression_comp','EngineScript.py',701),
]
