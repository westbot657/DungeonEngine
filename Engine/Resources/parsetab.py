
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "expressionsleft+-left*/leftLTLEGTGEEENEleftANDORAND BOOLEAN BREAK CONTINUE EE ELSE ELSEIF FUNCTION GE GT IF LE LT MACRO MAX MIN NE NOT NUMBER OR PASS RETURN STRING TAG VARIABLE WORDexpression : PASSexpression : MACRO '=' expression\n                  | MACROatom : VARIABLE '=' expression\n            | VARIABLEelse_branch : ELSE scopeelif_branch : ELSEIF '(' expression ')' scope elif_branch\n                   | ELSEIF '(' expression ')' scope else_branch\n                   | ELSEIF '(' expression ')' scopeif_condition : IF '(' expression ')' scope elif_branch\n                    | IF '(' expression ')' scope else_branch\n                    | IF '(' expression ')' scopefunction_call : FUNCTION parameters scope\n                     | FUNCTION parameters tag_list\n                     | FUNCTION parameters\n                     | FUNCTIONtag : TAG expressiontag_list : tag '#' scope tag_list\n                | tag '#' scopescope : '{' expressions '}'\n             | '{' '}'expressions : statement expressions\n                   | statementparameters : '(' param_element ')'\n                  | '(' ')'param_element_pos : WORD '=' expression ',' param_element_pos\n                         | WORD '=' expression ','\n                         | WORD '=' expressionparam_element : expression ',' param_element\n                     | expression ',' param_element_pos\n                     | expression ','\n                     | expressionstatement : BREAKstatement : expression\n                 | if_conditionatom : function_callcomp : NOT comp\n            | arith LT arith\n            | arith LE arith\n            | arith GT arith\n            | arith GE arith\n            | arith EE arith\n            | arith NE arith\n            | comp AND comp\n            | comp OR comp\n            | aritharith : atom '+' atom\n             | atom '-' atom\n             | atom '*' atom\n             | atom '/' atom\n             | atom '%' atom\n             | atom '&' atom\n             | atom '|' atom\n             | atom '^' atom\n             | atomatom : '-' atomcomma_expressions : expression ',' comma_expressions\n                         | expression ','\n                         | expressionarith : MIN '(' comma_expressions ')'\n             | MAX '(' comma_expressions ')'atom : '(' expression ')'statement : RETURN expression\n                 | RETURNtable_contents : STRING ':' expression ',' table_contents\n                      | NUMBER ':' expression ',' table_contents\n                      | STRING ':' expression ','\n                      | NUMBER ':' expression ','\n                      | STRING ':' expression\n                      | NUMBER ':' expressiontable : '%' '[' comma_expressions ']'\n             | '%' '{' table_contents '}'atom : NUMBER\n            | BOOLEAN\n            | STRING\n            | table\n            | WORD\n            | scopeexpression : comp"
    
_lr_action_items = {'BREAK':([0,2,3,4,5,6,7,8,9,12,14,15,20,21,22,23,24,25,26,27,28,30,36,51,57,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,93,95,97,99,102,103,106,108,112,116,117,122,125,134,135,136,],[3,3,-33,-34,-35,-64,-1,-3,-79,-78,-46,-55,-5,-36,-73,-74,-75,-76,-77,-16,3,-63,-37,-56,-15,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,-25,-20,-71,-72,-60,-61,-24,-12,-19,-10,-11,-18,-6,-9,-7,-8,]),'RETURN':([0,2,3,4,5,6,7,8,9,12,14,15,20,21,22,23,24,25,26,27,28,30,36,51,57,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,93,95,97,99,102,103,106,108,112,116,117,122,125,134,135,136,],[6,6,-33,-34,-35,-64,-1,-3,-79,-78,-46,-55,-5,-36,-73,-74,-75,-76,-77,-16,6,-63,-37,-56,-15,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,-25,-20,-71,-72,-60,-61,-24,-12,-19,-10,-11,-18,-6,-9,-7,-8,]),'PASS':([0,2,3,4,5,6,7,8,9,11,12,14,15,20,21,22,23,24,25,26,27,28,30,31,34,36,51,52,54,55,56,57,58,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,91,93,95,97,98,99,100,101,102,103,106,107,108,112,116,117,122,123,124,125,134,135,136,],[7,7,-33,-34,-35,7,-1,-3,-79,7,-78,-46,-55,-5,-36,-73,-74,-75,-76,-77,-16,7,-63,7,7,-37,-56,7,7,7,7,-15,7,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,7,-25,-20,-71,7,-72,7,7,-60,-61,-24,7,-12,-19,-10,-11,-18,7,7,-6,-9,-7,-8,]),'MACRO':([0,2,3,4,5,6,7,8,9,11,12,14,15,20,21,22,23,24,25,26,27,28,30,31,34,36,51,52,54,55,56,57,58,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,91,93,95,97,98,99,100,101,102,103,106,107,108,112,116,117,122,123,124,125,134,135,136,],[8,8,-33,-34,-35,8,-1,-3,-79,8,-78,-46,-55,-5,-36,-73,-74,-75,-76,-77,-16,8,-63,8,8,-37,-56,8,8,8,8,-15,8,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,8,-25,-20,-71,8,-72,8,8,-60,-61,-24,8,-12,-19,-10,-11,-18,8,8,-6,-9,-7,-8,]),'IF':([0,2,3,4,5,6,7,8,9,12,14,15,20,21,22,23,24,25,26,27,28,30,36,51,57,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,93,95,97,99,102,103,106,108,112,116,117,122,125,134,135,136,],[10,10,-33,-34,-35,-64,-1,-3,-79,-78,-46,-55,-5,-36,-73,-74,-75,-76,-77,-16,10,-63,-37,-56,-15,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,-25,-20,-71,-72,-60,-61,-24,-12,-19,-10,-11,-18,-6,-9,-7,-8,]),'NOT':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,51,52,54,55,56,57,58,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,91,93,95,97,98,99,100,101,102,103,106,107,108,112,116,117,122,123,124,125,134,135,136,],[13,13,-33,-34,-35,13,-1,-3,-79,13,-78,13,-46,-55,-5,-36,-73,-74,-75,-76,-77,-16,13,-63,13,13,13,13,-37,-56,13,13,13,13,-15,13,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,13,-25,-20,-71,13,-72,13,13,-60,-61,-24,13,-12,-19,-10,-11,-18,13,13,-6,-9,-7,-8,]),'MIN':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,51,52,54,55,56,57,58,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,91,93,95,97,98,99,100,101,102,103,106,107,108,112,116,117,122,123,124,125,134,135,136,],[18,18,-33,-34,-35,18,-1,-3,-79,18,-78,18,-46,-55,-5,-36,-73,-74,-75,-76,-77,-16,18,-63,18,18,18,18,-37,18,18,18,18,18,18,-56,18,18,18,18,-15,18,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,18,-25,-20,-71,18,-72,18,18,-60,-61,-24,18,-12,-19,-10,-11,-18,18,18,-6,-9,-7,-8,]),'MAX':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,51,52,54,55,56,57,58,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,91,93,95,97,98,99,100,101,102,103,106,107,108,112,116,117,122,123,124,125,134,135,136,],[19,19,-33,-34,-35,19,-1,-3,-79,19,-78,19,-46,-55,-5,-36,-73,-74,-75,-76,-77,-16,19,-63,19,19,19,19,-37,19,19,19,19,19,19,-56,19,19,19,19,-15,19,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,19,-25,-20,-71,19,-72,19,19,-60,-61,-24,19,-12,-19,-10,-11,-18,19,19,-6,-9,-7,-8,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,91,93,95,97,98,99,100,101,102,103,106,107,108,112,116,117,122,123,124,125,134,135,136,],[20,20,-33,-34,-35,20,-1,-3,-79,20,-78,20,-46,-55,20,-5,-36,-73,-74,-75,-76,-77,-16,20,-63,20,20,20,20,-37,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-56,20,20,20,20,-15,20,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,20,-25,-20,-71,20,-72,20,20,-60,-61,-24,20,-12,-19,-10,-11,-18,20,20,-6,-9,-7,-8,]),'-':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,91,93,95,97,98,99,100,101,102,103,106,107,108,112,115,116,117,122,123,124,125,134,135,136,],[16,16,-33,-34,-35,16,-1,-3,-79,16,-78,16,-46,44,16,-5,-36,-73,-74,-75,-76,-77,-16,16,-63,16,16,16,16,-37,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-56,16,16,16,16,-15,16,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,16,-25,-20,-71,16,-72,16,16,-60,-61,-24,16,-12,-19,-77,-10,-11,-18,16,16,-6,-9,-7,-8,]),'(':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,91,93,95,97,98,99,100,101,102,103,106,107,108,112,116,117,118,122,123,124,125,134,135,136,],[11,11,-33,-34,-35,11,-1,-3,-79,34,11,-78,11,-46,-55,11,54,55,-5,-36,-73,-74,-75,-76,-77,58,11,-63,11,11,11,11,-37,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-56,11,11,11,11,-15,11,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,11,-25,-20,-71,11,-72,11,11,-60,-61,-24,11,-12,-19,-10,-11,124,-18,11,11,-6,-9,-7,-8,]),'NUMBER':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,91,93,95,97,98,99,100,101,102,103,106,107,108,112,116,117,120,121,122,123,124,125,134,135,136,],[22,22,-33,-34,-35,22,-1,-3,-79,22,-78,22,-46,-55,22,-5,-36,-73,-74,-75,-76,-77,-16,22,-63,22,22,22,22,-37,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-56,22,84,22,22,22,-15,22,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,22,-25,-20,-71,22,-72,22,22,-60,-61,-24,22,-12,-19,-10,-11,84,84,-18,22,22,-6,-9,-7,-8,]),'BOOLEAN':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,91,93,95,97,98,99,100,101,102,103,106,107,108,112,116,117,122,123,124,125,134,135,136,],[23,23,-33,-34,-35,23,-1,-3,-79,23,-78,23,-46,-55,23,-5,-36,-73,-74,-75,-76,-77,-16,23,-63,23,23,23,23,-37,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-56,23,23,23,23,-15,23,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,23,-25,-20,-71,23,-72,23,23,-60,-61,-24,23,-12,-19,-10,-11,-18,23,23,-6,-9,-7,-8,]),'STRING':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,91,93,95,97,98,99,100,101,102,103,106,107,108,112,116,117,120,121,122,123,124,125,134,135,136,],[24,24,-33,-34,-35,24,-1,-3,-79,24,-78,24,-46,-55,24,-5,-36,-73,-74,-75,-76,-77,-16,24,-63,24,24,24,24,-37,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-56,24,83,24,24,24,-15,24,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,24,-25,-20,-71,24,-72,24,24,-60,-61,-24,24,-12,-19,-10,-11,83,83,-18,24,24,-6,-9,-7,-8,]),'WORD':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,91,93,95,97,98,99,100,101,102,103,106,107,108,112,116,117,122,123,124,125,130,134,135,136,],[26,26,-33,-34,-35,26,-1,-3,-79,26,-78,26,-46,-55,26,-5,-36,-73,-74,-75,-76,-77,-16,26,-63,26,26,26,26,-37,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-56,26,26,26,26,-15,26,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,26,-25,-20,-71,26,-72,26,26,-60,-61,-24,115,-12,-19,-10,-11,-18,26,26,-6,132,-9,-7,-8,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,91,93,95,97,98,99,100,101,102,103,106,107,108,112,116,117,122,123,124,125,134,135,136,],[27,27,-33,-34,-35,27,-1,-3,-79,27,-78,27,-46,-55,27,-5,-36,-73,-74,-75,-76,-77,-16,27,-63,27,27,27,27,-37,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-56,27,27,27,27,-15,27,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,27,-25,-20,-71,27,-72,27,27,-60,-61,-24,27,-12,-19,-10,-11,-18,27,27,-6,-9,-7,-8,]),'%':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,91,93,95,97,98,99,100,101,102,103,106,107,108,112,115,116,117,122,123,124,125,134,135,136,],[17,17,-33,-34,-35,17,-1,-3,-79,17,-78,17,-46,47,17,-5,-36,-73,-74,-75,-76,-77,-16,17,-63,17,17,17,17,-37,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-56,17,17,17,17,-15,17,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,17,-25,-20,-71,17,-72,17,17,-60,-61,-24,17,-12,-19,-77,-10,-11,-18,17,17,-6,-9,-7,-8,]),'{':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,91,93,95,96,97,98,99,100,101,102,103,104,106,107,108,112,116,117,119,122,123,124,125,131,134,135,136,],[28,28,-33,-34,-35,28,-1,-3,-79,28,-78,28,-46,-55,28,53,-5,-36,-73,-74,-75,-76,-77,-16,28,-63,28,28,28,28,-37,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-56,28,28,28,28,28,28,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,28,-25,-20,28,-71,28,-72,28,28,-60,-61,28,-24,28,-12,-19,-10,-11,28,-18,28,28,-6,28,-9,-7,-8,]),'$end':([1,2,3,4,5,6,7,8,9,12,14,15,20,21,22,23,24,25,26,27,29,30,36,51,57,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,93,95,97,99,102,103,106,108,112,116,117,122,125,134,135,136,],[0,-23,-33,-34,-35,-64,-1,-3,-79,-78,-46,-55,-5,-36,-73,-74,-75,-76,-77,-16,-22,-63,-37,-56,-15,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,-25,-20,-71,-72,-60,-61,-24,-12,-19,-10,-11,-18,-6,-9,-7,-8,]),'}':([2,3,4,5,6,7,8,9,12,14,15,20,21,22,23,24,25,26,27,28,29,30,36,51,57,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,87,88,89,93,95,97,99,102,103,106,108,110,111,112,116,117,120,121,122,125,126,127,134,135,136,],[-23,-33,-34,-35,-64,-1,-3,-79,-78,-46,-55,-5,-36,-73,-74,-75,-76,-77,-16,60,-22,-63,-37,-56,-15,95,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,99,-4,-13,-14,-25,-20,-71,-72,-60,-61,-24,-12,-69,-70,-19,-10,-11,-67,-68,-18,-6,-65,-66,-9,-7,-8,]),')':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,35,36,51,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,85,86,87,88,89,92,93,94,95,97,98,99,102,103,106,107,109,112,113,114,115,122,128,129,130,133,],[-1,-3,-79,-78,-46,-55,-5,-36,-73,-74,-75,-76,-77,-16,65,-37,-56,-15,93,-21,-2,-44,-45,96,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-59,102,103,-4,-13,-14,106,-25,-32,-20,-71,-58,-72,-60,-61,-24,-31,-57,-19,-29,-30,-77,-18,-28,131,-27,-26,]),'AND':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,51,57,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,93,95,97,99,102,103,106,112,115,122,],[-1,-3,32,-78,-46,-55,-5,-36,-73,-74,-75,-76,-77,-16,32,-56,-15,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,-25,-20,-71,-72,-60,-61,-24,-19,-77,-18,]),'OR':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,51,57,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,93,95,97,99,102,103,106,112,115,122,],[-1,-3,33,-78,-46,-55,-5,-36,-73,-74,-75,-76,-77,-16,33,-56,-15,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,-25,-20,-71,-72,-60,-61,-24,-19,-77,-18,]),',':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,51,57,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,87,88,89,93,94,95,97,99,102,103,106,110,111,112,115,122,128,],[-1,-3,-79,-78,-46,-55,-5,-36,-73,-74,-75,-76,-77,-16,-37,-56,-15,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,98,-4,-13,-14,-25,107,-20,-71,-72,-60,-61,-24,120,121,-19,-77,-18,130,]),']':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,51,57,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,87,88,89,93,95,97,98,99,102,103,106,109,112,122,],[-1,-3,-79,-78,-46,-55,-5,-36,-73,-74,-75,-76,-77,-16,-37,-56,-15,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,97,-59,-4,-13,-14,-25,-20,-71,-58,-72,-60,-61,-24,-57,-19,-18,]),'+':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,51,57,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,93,95,97,99,102,103,106,112,115,122,],[-1,-3,-79,-78,-46,43,-5,-36,-73,-74,-75,-76,-77,-16,-37,-56,-15,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,-25,-20,-71,-72,-60,-61,-24,-19,-77,-18,]),'*':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,51,57,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,93,95,97,99,102,103,106,112,115,122,],[-1,-3,-79,-78,-46,45,-5,-36,-73,-74,-75,-76,-77,-16,-37,-56,-15,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,-25,-20,-71,-72,-60,-61,-24,-19,-77,-18,]),'/':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,51,57,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,93,95,97,99,102,103,106,112,115,122,],[-1,-3,-79,-78,-46,46,-5,-36,-73,-74,-75,-76,-77,-16,-37,-56,-15,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,-25,-20,-71,-72,-60,-61,-24,-19,-77,-18,]),'&':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,51,57,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,93,95,97,99,102,103,106,112,115,122,],[-1,-3,-79,-78,-46,48,-5,-36,-73,-74,-75,-76,-77,-16,-37,-56,-15,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,-25,-20,-71,-72,-60,-61,-24,-19,-77,-18,]),'|':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,51,57,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,93,95,97,99,102,103,106,112,115,122,],[-1,-3,-79,-78,-46,49,-5,-36,-73,-74,-75,-76,-77,-16,-37,-56,-15,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,-25,-20,-71,-72,-60,-61,-24,-19,-77,-18,]),'^':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,51,57,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,93,95,97,99,102,103,106,112,115,122,],[-1,-3,-79,-78,-46,50,-5,-36,-73,-74,-75,-76,-77,-16,-37,-56,-15,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,-25,-20,-71,-72,-60,-61,-24,-19,-77,-18,]),'LT':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,51,57,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,93,95,97,99,102,103,106,112,115,122,],[-1,-3,-79,-78,37,-55,-5,-36,-73,-74,-75,-76,-77,-16,-37,-56,-15,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,-25,-20,-71,-72,-60,-61,-24,-19,-77,-18,]),'LE':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,51,57,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,93,95,97,99,102,103,106,112,115,122,],[-1,-3,-79,-78,38,-55,-5,-36,-73,-74,-75,-76,-77,-16,-37,-56,-15,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,-25,-20,-71,-72,-60,-61,-24,-19,-77,-18,]),'GT':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,51,57,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,93,95,97,99,102,103,106,112,115,122,],[-1,-3,-79,-78,39,-55,-5,-36,-73,-74,-75,-76,-77,-16,-37,-56,-15,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,-25,-20,-71,-72,-60,-61,-24,-19,-77,-18,]),'GE':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,51,57,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,93,95,97,99,102,103,106,112,115,122,],[-1,-3,-79,-78,40,-55,-5,-36,-73,-74,-75,-76,-77,-16,-37,-56,-15,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,-25,-20,-71,-72,-60,-61,-24,-19,-77,-18,]),'EE':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,51,57,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,93,95,97,99,102,103,106,112,115,122,],[-1,-3,-79,-78,41,-55,-5,-36,-73,-74,-75,-76,-77,-16,-37,-56,-15,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,-25,-20,-71,-72,-60,-61,-24,-19,-77,-18,]),'NE':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,51,57,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,93,95,97,99,102,103,106,112,115,122,],[-1,-3,-79,-78,42,-55,-5,-36,-73,-74,-75,-76,-77,-16,-37,-56,-15,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,-25,-20,-71,-72,-60,-61,-24,-19,-77,-18,]),'#':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,51,57,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,93,95,97,99,102,103,105,106,112,122,],[-1,-3,-79,-78,-46,-55,-5,-36,-73,-74,-75,-76,-77,-16,-37,-56,-15,-21,-2,-44,-45,-62,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-4,-13,-14,104,-25,-20,-71,-72,-60,-61,-17,-24,-19,-18,]),'=':([8,20,115,132,],[31,56,123,123,]),'[':([17,],[52,]),'TAG':([57,60,93,95,106,112,],[91,-21,-25,-20,-24,91,]),'ELSEIF':([60,95,108,134,],[-21,-20,118,118,]),'ELSE':([60,95,108,134,],[-21,-20,119,119,]),':':([83,84,],[100,101,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expressions':([0,2,28,],[1,29,59,]),'statement':([0,2,28,],[2,2,2,]),'expression':([0,2,6,11,28,31,34,52,54,55,56,58,91,98,100,101,107,123,124,],[4,4,30,35,4,61,64,81,81,81,87,94,105,81,110,111,94,128,129,]),'if_condition':([0,2,28,],[5,5,5,]),'comp':([0,2,6,11,13,28,31,32,33,34,52,54,55,56,58,91,98,100,101,107,123,124,],[9,9,9,9,36,9,9,62,63,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'scope':([0,2,6,11,13,16,28,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,54,55,56,57,58,91,96,98,100,101,104,107,119,123,124,131,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,88,12,12,108,12,12,12,112,12,125,12,12,134,]),'arith':([0,2,6,11,13,28,31,32,33,34,37,38,39,40,41,42,52,54,55,56,58,91,98,100,101,107,123,124,],[14,14,14,14,14,14,14,14,14,14,66,67,68,69,70,71,14,14,14,14,14,14,14,14,14,14,14,14,]),'atom':([0,2,6,11,13,16,28,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,54,55,56,58,91,98,100,101,107,123,124,],[15,15,15,15,15,51,15,15,15,15,15,15,15,15,15,15,15,72,73,74,75,76,77,78,79,15,15,15,15,15,15,15,15,15,15,15,15,]),'function_call':([0,2,6,11,13,16,28,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,54,55,56,58,91,98,100,101,107,123,124,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'table':([0,2,6,11,13,16,28,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,54,55,56,58,91,98,100,101,107,123,124,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'parameters':([27,],[57,]),'comma_expressions':([52,54,55,98,],[80,85,86,109,]),'table_contents':([53,120,121,],[82,126,127,]),'tag_list':([57,112,],[89,122,]),'tag':([57,112,],[90,90,]),'param_element':([58,107,],[92,113,]),'param_element_pos':([107,130,],[114,133,]),'elif_branch':([108,134,],[116,135,]),'else_branch':([108,134,],[117,136,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expressions","S'",1,None,None,None),
  ('expression -> PASS','expression',1,'p_pass','EngineScript.py',167),
  ('expression -> MACRO = expression','expression',3,'p_macro_statement','EngineScript.py',171),
  ('expression -> MACRO','expression',1,'p_macro_statement','EngineScript.py',172),
  ('atom -> VARIABLE = expression','atom',3,'p_statement_assign','EngineScript.py',183),
  ('atom -> VARIABLE','atom',1,'p_statement_assign','EngineScript.py',184),
  ('else_branch -> ELSE scope','else_branch',2,'p_else_branch','EngineScript.py',196),
  ('elif_branch -> ELSEIF ( expression ) scope elif_branch','elif_branch',6,'p_elif_branch','EngineScript.py',202),
  ('elif_branch -> ELSEIF ( expression ) scope else_branch','elif_branch',6,'p_elif_branch','EngineScript.py',203),
  ('elif_branch -> ELSEIF ( expression ) scope','elif_branch',5,'p_elif_branch','EngineScript.py',204),
  ('if_condition -> IF ( expression ) scope elif_branch','if_condition',6,'p_if_statement','EngineScript.py',216),
  ('if_condition -> IF ( expression ) scope else_branch','if_condition',6,'p_if_statement','EngineScript.py',217),
  ('if_condition -> IF ( expression ) scope','if_condition',5,'p_if_statement','EngineScript.py',218),
  ('function_call -> FUNCTION parameters scope','function_call',3,'p_function_call','EngineScript.py',228),
  ('function_call -> FUNCTION parameters tag_list','function_call',3,'p_function_call','EngineScript.py',229),
  ('function_call -> FUNCTION parameters','function_call',2,'p_function_call','EngineScript.py',230),
  ('function_call -> FUNCTION','function_call',1,'p_function_call','EngineScript.py',231),
  ('tag -> TAG expression','tag',2,'p_tag','EngineScript.py',421),
  ('tag_list -> tag # scope tag_list','tag_list',4,'p_tag_list','EngineScript.py',428),
  ('tag_list -> tag # scope','tag_list',3,'p_tag_list','EngineScript.py',429),
  ('scope -> { expressions }','scope',3,'p_scope','EngineScript.py',443),
  ('scope -> { }','scope',2,'p_scope','EngineScript.py',444),
  ('expressions -> statement expressions','expressions',2,'p_statements','EngineScript.py',451),
  ('expressions -> statement','expressions',1,'p_statements','EngineScript.py',452),
  ('parameters -> ( param_element )','parameters',3,'p_parameters','EngineScript.py',475),
  ('parameters -> ( )','parameters',2,'p_parameters','EngineScript.py',476),
  ('param_element_pos -> WORD = expression , param_element_pos','param_element_pos',5,'p_param_element2','EngineScript.py',483),
  ('param_element_pos -> WORD = expression ,','param_element_pos',4,'p_param_element2','EngineScript.py',484),
  ('param_element_pos -> WORD = expression','param_element_pos',3,'p_param_element2','EngineScript.py',485),
  ('param_element -> expression , param_element','param_element',3,'p_param_element','EngineScript.py',496),
  ('param_element -> expression , param_element_pos','param_element',3,'p_param_element','EngineScript.py',497),
  ('param_element -> expression ,','param_element',2,'p_param_element','EngineScript.py',498),
  ('param_element -> expression','param_element',1,'p_param_element','EngineScript.py',499),
  ('statement -> BREAK','statement',1,'p_statement_break','EngineScript.py',510),
  ('statement -> expression','statement',1,'p_statement_expr','EngineScript.py',514),
  ('statement -> if_condition','statement',1,'p_statement_expr','EngineScript.py',515),
  ('atom -> function_call','atom',1,'p_expression_function_call','EngineScript.py',519),
  ('comp -> NOT comp','comp',2,'p_comp_expression','EngineScript.py',523),
  ('comp -> arith LT arith','comp',3,'p_comp_expression','EngineScript.py',524),
  ('comp -> arith LE arith','comp',3,'p_comp_expression','EngineScript.py',525),
  ('comp -> arith GT arith','comp',3,'p_comp_expression','EngineScript.py',526),
  ('comp -> arith GE arith','comp',3,'p_comp_expression','EngineScript.py',527),
  ('comp -> arith EE arith','comp',3,'p_comp_expression','EngineScript.py',528),
  ('comp -> arith NE arith','comp',3,'p_comp_expression','EngineScript.py',529),
  ('comp -> comp AND comp','comp',3,'p_comp_expression','EngineScript.py',530),
  ('comp -> comp OR comp','comp',3,'p_comp_expression','EngineScript.py',531),
  ('comp -> arith','comp',1,'p_comp_expression','EngineScript.py',532),
  ('arith -> atom + atom','arith',3,'p_expression_binop','EngineScript.py',581),
  ('arith -> atom - atom','arith',3,'p_expression_binop','EngineScript.py',582),
  ('arith -> atom * atom','arith',3,'p_expression_binop','EngineScript.py',583),
  ('arith -> atom / atom','arith',3,'p_expression_binop','EngineScript.py',584),
  ('arith -> atom % atom','arith',3,'p_expression_binop','EngineScript.py',585),
  ('arith -> atom & atom','arith',3,'p_expression_binop','EngineScript.py',586),
  ('arith -> atom | atom','arith',3,'p_expression_binop','EngineScript.py',587),
  ('arith -> atom ^ atom','arith',3,'p_expression_binop','EngineScript.py',588),
  ('arith -> atom','arith',1,'p_expression_binop','EngineScript.py',589),
  ('atom -> - atom','atom',2,'p_expression_uminus','EngineScript.py',628),
  ('comma_expressions -> expression , comma_expressions','comma_expressions',3,'p_comma_sep_expressions','EngineScript.py',639),
  ('comma_expressions -> expression ,','comma_expressions',2,'p_comma_sep_expressions','EngineScript.py',640),
  ('comma_expressions -> expression','comma_expressions',1,'p_comma_sep_expressions','EngineScript.py',641),
  ('arith -> MIN ( comma_expressions )','arith',4,'p_expression_min','EngineScript.py',648),
  ('arith -> MAX ( comma_expressions )','arith',4,'p_expression_min','EngineScript.py',649),
  ('atom -> ( expression )','atom',3,'p_expression_group','EngineScript.py',661),
  ('statement -> RETURN expression','statement',2,'p_expression_return','EngineScript.py',665),
  ('statement -> RETURN','statement',1,'p_expression_return','EngineScript.py',666),
  ('table_contents -> STRING : expression , table_contents','table_contents',5,'p_table_contents','EngineScript.py',673),
  ('table_contents -> NUMBER : expression , table_contents','table_contents',5,'p_table_contents','EngineScript.py',674),
  ('table_contents -> STRING : expression ,','table_contents',4,'p_table_contents','EngineScript.py',675),
  ('table_contents -> NUMBER : expression ,','table_contents',4,'p_table_contents','EngineScript.py',676),
  ('table_contents -> STRING : expression','table_contents',3,'p_table_contents','EngineScript.py',677),
  ('table_contents -> NUMBER : expression','table_contents',3,'p_table_contents','EngineScript.py',678),
  ('table -> % [ comma_expressions ]','table',4,'p_table','EngineScript.py',690),
  ('table -> % { table_contents }','table',4,'p_table','EngineScript.py',691),
  ('atom -> NUMBER','atom',1,'p_expression_other','EngineScript.py',706),
  ('atom -> BOOLEAN','atom',1,'p_expression_other','EngineScript.py',707),
  ('atom -> STRING','atom',1,'p_expression_other','EngineScript.py',708),
  ('atom -> table','atom',1,'p_expression_other','EngineScript.py',709),
  ('atom -> WORD','atom',1,'p_expression_other','EngineScript.py',710),
  ('atom -> scope','atom',1,'p_expression_other','EngineScript.py',711),
  ('expression -> comp','expression',1,'p_expression_comp','EngineScript.py',718),
]
