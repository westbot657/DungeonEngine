
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "expressionsleft+-left*/leftLTLEGTGEEENEleftANDORAND BOOLEAN BREAK CONTINUE EE ELSE ELSEIF FUNCTION GE GT IF LE LT MACRO MAX MIN NE NOT NUMBER OR PASS POW RETURN STRING TAG VARIABLE WORDexpression : PASSexpression : MACRO '=' expression\n                  | MACROatom : VARIABLE '=' expression\n            | VARIABLEelse_branch : ELSE scopeelif_branch : ELSEIF '(' expression ')' scope elif_branch\n                   | ELSEIF '(' expression ')' scope else_branch\n                   | ELSEIF '(' expression ')' scopeif_condition : IF '(' expression ')' scope elif_branch\n                    | IF '(' expression ')' scope else_branch\n                    | IF '(' expression ')' scopefunction_call : FUNCTION parameters scope\n                     | FUNCTION parameters tag_list\n                     | FUNCTION parameters\n                     | FUNCTIONtag : TAG expressiontag_list : tag '#' scope tag_list\n                | tag '#' scopescope : '{' expressions '}'\n             | '{' '}'expressions : statement expressions\n                   | statementparameters : '(' param_element ')'\n                  | '(' ')'param_element_pos : WORD '=' expression ',' param_element_pos\n                         | WORD '=' expression ','\n                         | WORD '=' expressionparam_element : expression ',' param_element\n                     | expression ',' param_element_pos\n                     | expression ','\n                     | expressionstatement : BREAKstatement : expression\n                 | if_conditionatom : function_callcomp : NOT comp\n            | arith LT arith\n            | arith LE arith\n            | arith GT arith\n            | arith GE arith\n            | arith EE arith\n            | arith NE arith\n            | comp AND comp\n            | comp OR comp\n            | aritharith : atom '+' atom\n             | atom '-' atom\n             | atom '*' atom\n             | atom '/' atom\n             | atom '%' atom\n             | atom '&' atom\n             | atom '|' atom\n             | atom '^' atom\n             | atom POW atom\n             | atomatom : '-' atomcomma_expressions : expression ',' comma_expressions\n                         | expression ','\n                         | expressionarith : MIN '(' comma_expressions ')'\n             | MAX '(' comma_expressions ')'atom : '(' expression ')'statement : RETURN expression\n                 | RETURNtable_contents : STRING ':' expression ',' table_contents\n                      | NUMBER ':' expression ',' table_contents\n                      | STRING ':' expression ','\n                      | NUMBER ':' expression ','\n                      | STRING ':' expression\n                      | NUMBER ':' expressiontable : '%' '[' comma_expressions ']'\n             | '%' '{' table_contents '}'atom : NUMBER\n            | BOOLEAN\n            | STRING\n            | table\n            | WORD\n            | scopeexpression : comp"
    
_lr_action_items = {'BREAK':([0,2,3,4,5,6,7,8,9,12,14,15,20,21,22,23,24,25,26,27,28,30,36,52,58,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,95,97,99,101,104,105,108,110,114,118,119,124,127,136,137,138,],[3,3,-33,-34,-35,-65,-1,-3,-80,-79,-46,-56,-5,-36,-74,-75,-76,-77,-78,-16,3,-64,-37,-57,-15,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,-25,-20,-72,-73,-61,-62,-24,-12,-19,-10,-11,-18,-6,-9,-7,-8,]),'RETURN':([0,2,3,4,5,6,7,8,9,12,14,15,20,21,22,23,24,25,26,27,28,30,36,52,58,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,95,97,99,101,104,105,108,110,114,118,119,124,127,136,137,138,],[6,6,-33,-34,-35,-65,-1,-3,-80,-79,-46,-56,-5,-36,-74,-75,-76,-77,-78,-16,6,-64,-37,-57,-15,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,-25,-20,-72,-73,-61,-62,-24,-12,-19,-10,-11,-18,-6,-9,-7,-8,]),'PASS':([0,2,3,4,5,6,7,8,9,11,12,14,15,20,21,22,23,24,25,26,27,28,30,31,34,36,52,53,55,56,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,93,95,97,99,100,101,102,103,104,105,108,109,110,114,118,119,124,125,126,127,136,137,138,],[7,7,-33,-34,-35,7,-1,-3,-80,7,-79,-46,-56,-5,-36,-74,-75,-76,-77,-78,-16,7,-64,7,7,-37,-57,7,7,7,7,-15,7,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,7,-25,-20,-72,7,-73,7,7,-61,-62,-24,7,-12,-19,-10,-11,-18,7,7,-6,-9,-7,-8,]),'MACRO':([0,2,3,4,5,6,7,8,9,11,12,14,15,20,21,22,23,24,25,26,27,28,30,31,34,36,52,53,55,56,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,93,95,97,99,100,101,102,103,104,105,108,109,110,114,118,119,124,125,126,127,136,137,138,],[8,8,-33,-34,-35,8,-1,-3,-80,8,-79,-46,-56,-5,-36,-74,-75,-76,-77,-78,-16,8,-64,8,8,-37,-57,8,8,8,8,-15,8,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,8,-25,-20,-72,8,-73,8,8,-61,-62,-24,8,-12,-19,-10,-11,-18,8,8,-6,-9,-7,-8,]),'IF':([0,2,3,4,5,6,7,8,9,12,14,15,20,21,22,23,24,25,26,27,28,30,36,52,58,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,95,97,99,101,104,105,108,110,114,118,119,124,127,136,137,138,],[10,10,-33,-34,-35,-65,-1,-3,-80,-79,-46,-56,-5,-36,-74,-75,-76,-77,-78,-16,10,-64,-37,-57,-15,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,-25,-20,-72,-73,-61,-62,-24,-12,-19,-10,-11,-18,-6,-9,-7,-8,]),'NOT':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,52,53,55,56,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,93,95,97,99,100,101,102,103,104,105,108,109,110,114,118,119,124,125,126,127,136,137,138,],[13,13,-33,-34,-35,13,-1,-3,-80,13,-79,13,-46,-56,-5,-36,-74,-75,-76,-77,-78,-16,13,-64,13,13,13,13,-37,-57,13,13,13,13,-15,13,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,13,-25,-20,-72,13,-73,13,13,-61,-62,-24,13,-12,-19,-10,-11,-18,13,13,-6,-9,-7,-8,]),'MIN':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,52,53,55,56,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,93,95,97,99,100,101,102,103,104,105,108,109,110,114,118,119,124,125,126,127,136,137,138,],[18,18,-33,-34,-35,18,-1,-3,-80,18,-79,18,-46,-56,-5,-36,-74,-75,-76,-77,-78,-16,18,-64,18,18,18,18,-37,18,18,18,18,18,18,-57,18,18,18,18,-15,18,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,18,-25,-20,-72,18,-73,18,18,-61,-62,-24,18,-12,-19,-10,-11,-18,18,18,-6,-9,-7,-8,]),'MAX':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,52,53,55,56,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,93,95,97,99,100,101,102,103,104,105,108,109,110,114,118,119,124,125,126,127,136,137,138,],[19,19,-33,-34,-35,19,-1,-3,-80,19,-79,19,-46,-56,-5,-36,-74,-75,-76,-77,-78,-16,19,-64,19,19,19,19,-37,19,19,19,19,19,19,-57,19,19,19,19,-15,19,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,19,-25,-20,-72,19,-73,19,19,-61,-62,-24,19,-12,-19,-10,-11,-18,19,19,-6,-9,-7,-8,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,93,95,97,99,100,101,102,103,104,105,108,109,110,114,118,119,124,125,126,127,136,137,138,],[20,20,-33,-34,-35,20,-1,-3,-80,20,-79,20,-46,-56,20,-5,-36,-74,-75,-76,-77,-78,-16,20,-64,20,20,20,20,-37,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-57,20,20,20,20,-15,20,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,20,-25,-20,-72,20,-73,20,20,-61,-62,-24,20,-12,-19,-10,-11,-18,20,20,-6,-9,-7,-8,]),'-':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,93,95,97,99,100,101,102,103,104,105,108,109,110,114,117,118,119,124,125,126,127,136,137,138,],[16,16,-33,-34,-35,16,-1,-3,-80,16,-79,16,-46,44,16,-5,-36,-74,-75,-76,-77,-78,-16,16,-64,16,16,16,16,-37,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-57,16,16,16,16,-15,16,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,16,-25,-20,-72,16,-73,16,16,-61,-62,-24,16,-12,-19,-78,-10,-11,-18,16,16,-6,-9,-7,-8,]),'(':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,93,95,97,99,100,101,102,103,104,105,108,109,110,114,118,119,120,124,125,126,127,136,137,138,],[11,11,-33,-34,-35,11,-1,-3,-80,34,11,-79,11,-46,-56,11,55,56,-5,-36,-74,-75,-76,-77,-78,59,11,-64,11,11,11,11,-37,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-57,11,11,11,11,-15,11,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,11,-25,-20,-72,11,-73,11,11,-61,-62,-24,11,-12,-19,-10,-11,126,-18,11,11,-6,-9,-7,-8,]),'NUMBER':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,93,95,97,99,100,101,102,103,104,105,108,109,110,114,118,119,122,123,124,125,126,127,136,137,138,],[22,22,-33,-34,-35,22,-1,-3,-80,22,-79,22,-46,-56,22,-5,-36,-74,-75,-76,-77,-78,-16,22,-64,22,22,22,22,-37,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-57,22,86,22,22,22,-15,22,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,22,-25,-20,-72,22,-73,22,22,-61,-62,-24,22,-12,-19,-10,-11,86,86,-18,22,22,-6,-9,-7,-8,]),'BOOLEAN':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,93,95,97,99,100,101,102,103,104,105,108,109,110,114,118,119,124,125,126,127,136,137,138,],[23,23,-33,-34,-35,23,-1,-3,-80,23,-79,23,-46,-56,23,-5,-36,-74,-75,-76,-77,-78,-16,23,-64,23,23,23,23,-37,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-57,23,23,23,23,-15,23,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,23,-25,-20,-72,23,-73,23,23,-61,-62,-24,23,-12,-19,-10,-11,-18,23,23,-6,-9,-7,-8,]),'STRING':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,93,95,97,99,100,101,102,103,104,105,108,109,110,114,118,119,122,123,124,125,126,127,136,137,138,],[24,24,-33,-34,-35,24,-1,-3,-80,24,-79,24,-46,-56,24,-5,-36,-74,-75,-76,-77,-78,-16,24,-64,24,24,24,24,-37,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-57,24,85,24,24,24,-15,24,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,24,-25,-20,-72,24,-73,24,24,-61,-62,-24,24,-12,-19,-10,-11,85,85,-18,24,24,-6,-9,-7,-8,]),'WORD':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,93,95,97,99,100,101,102,103,104,105,108,109,110,114,118,119,124,125,126,127,132,136,137,138,],[26,26,-33,-34,-35,26,-1,-3,-80,26,-79,26,-46,-56,26,-5,-36,-74,-75,-76,-77,-78,-16,26,-64,26,26,26,26,-37,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-57,26,26,26,26,-15,26,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,26,-25,-20,-72,26,-73,26,26,-61,-62,-24,117,-12,-19,-10,-11,-18,26,26,-6,134,-9,-7,-8,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,93,95,97,99,100,101,102,103,104,105,108,109,110,114,118,119,124,125,126,127,136,137,138,],[27,27,-33,-34,-35,27,-1,-3,-80,27,-79,27,-46,-56,27,-5,-36,-74,-75,-76,-77,-78,-16,27,-64,27,27,27,27,-37,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-57,27,27,27,27,-15,27,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,27,-25,-20,-72,27,-73,27,27,-61,-62,-24,27,-12,-19,-10,-11,-18,27,27,-6,-9,-7,-8,]),'%':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,93,95,97,99,100,101,102,103,104,105,108,109,110,114,117,118,119,124,125,126,127,136,137,138,],[17,17,-33,-34,-35,17,-1,-3,-80,17,-79,17,-46,47,17,-5,-36,-74,-75,-76,-77,-78,-16,17,-64,17,17,17,17,-37,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-57,17,17,17,17,-15,17,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,17,-25,-20,-72,17,-73,17,17,-61,-62,-24,17,-12,-19,-78,-10,-11,-18,17,17,-6,-9,-7,-8,]),'{':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,93,95,97,98,99,100,101,102,103,104,105,106,108,109,110,114,118,119,121,124,125,126,127,133,136,137,138,],[28,28,-33,-34,-35,28,-1,-3,-80,28,-79,28,-46,-56,28,54,-5,-36,-74,-75,-76,-77,-78,-16,28,-64,28,28,28,28,-37,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-57,28,28,28,28,28,28,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,28,-25,-20,28,-72,28,-73,28,28,-61,-62,28,-24,28,-12,-19,-10,-11,28,-18,28,28,-6,28,-9,-7,-8,]),'$end':([1,2,3,4,5,6,7,8,9,12,14,15,20,21,22,23,24,25,26,27,29,30,36,52,58,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,95,97,99,101,104,105,108,110,114,118,119,124,127,136,137,138,],[0,-23,-33,-34,-35,-65,-1,-3,-80,-79,-46,-56,-5,-36,-74,-75,-76,-77,-78,-16,-22,-64,-37,-57,-15,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,-25,-20,-72,-73,-61,-62,-24,-12,-19,-10,-11,-18,-6,-9,-7,-8,]),'}':([2,3,4,5,6,7,8,9,12,14,15,20,21,22,23,24,25,26,27,28,29,30,36,52,58,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,84,89,90,91,95,97,99,101,104,105,108,110,112,113,114,118,119,122,123,124,127,128,129,136,137,138,],[-23,-33,-34,-35,-65,-1,-3,-80,-79,-46,-56,-5,-36,-74,-75,-76,-77,-78,-16,61,-22,-64,-37,-57,-15,97,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,101,-4,-13,-14,-25,-20,-72,-73,-61,-62,-24,-12,-70,-71,-19,-10,-11,-68,-69,-18,-6,-66,-67,-9,-7,-8,]),')':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,35,36,52,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,87,88,89,90,91,94,95,96,97,99,100,101,104,105,108,109,111,114,115,116,117,124,130,131,132,135,],[-1,-3,-80,-79,-46,-56,-5,-36,-74,-75,-76,-77,-78,-16,66,-37,-57,-15,95,-21,-2,-44,-45,98,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-60,104,105,-4,-13,-14,108,-25,-32,-20,-72,-59,-73,-61,-62,-24,-31,-58,-19,-29,-30,-78,-18,-28,133,-27,-26,]),'AND':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,52,58,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,95,97,99,101,104,105,108,114,117,124,],[-1,-3,32,-79,-46,-56,-5,-36,-74,-75,-76,-77,-78,-16,32,-57,-15,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,-25,-20,-72,-73,-61,-62,-24,-19,-78,-18,]),'OR':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,52,58,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,95,97,99,101,104,105,108,114,117,124,],[-1,-3,33,-79,-46,-56,-5,-36,-74,-75,-76,-77,-78,-16,33,-57,-15,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,-25,-20,-72,-73,-61,-62,-24,-19,-78,-18,]),',':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,52,58,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,89,90,91,95,96,97,99,101,104,105,108,112,113,114,117,124,130,],[-1,-3,-80,-79,-46,-56,-5,-36,-74,-75,-76,-77,-78,-16,-37,-57,-15,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,100,-4,-13,-14,-25,109,-20,-72,-73,-61,-62,-24,122,123,-19,-78,-18,132,]),']':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,52,58,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,89,90,91,95,97,99,100,101,104,105,108,111,114,124,],[-1,-3,-80,-79,-46,-56,-5,-36,-74,-75,-76,-77,-78,-16,-37,-57,-15,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,99,-60,-4,-13,-14,-25,-20,-72,-59,-73,-61,-62,-24,-58,-19,-18,]),'+':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,52,58,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,95,97,99,101,104,105,108,114,117,124,],[-1,-3,-80,-79,-46,43,-5,-36,-74,-75,-76,-77,-78,-16,-37,-57,-15,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,-25,-20,-72,-73,-61,-62,-24,-19,-78,-18,]),'*':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,52,58,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,95,97,99,101,104,105,108,114,117,124,],[-1,-3,-80,-79,-46,45,-5,-36,-74,-75,-76,-77,-78,-16,-37,-57,-15,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,-25,-20,-72,-73,-61,-62,-24,-19,-78,-18,]),'/':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,52,58,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,95,97,99,101,104,105,108,114,117,124,],[-1,-3,-80,-79,-46,46,-5,-36,-74,-75,-76,-77,-78,-16,-37,-57,-15,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,-25,-20,-72,-73,-61,-62,-24,-19,-78,-18,]),'&':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,52,58,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,95,97,99,101,104,105,108,114,117,124,],[-1,-3,-80,-79,-46,48,-5,-36,-74,-75,-76,-77,-78,-16,-37,-57,-15,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,-25,-20,-72,-73,-61,-62,-24,-19,-78,-18,]),'|':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,52,58,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,95,97,99,101,104,105,108,114,117,124,],[-1,-3,-80,-79,-46,49,-5,-36,-74,-75,-76,-77,-78,-16,-37,-57,-15,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,-25,-20,-72,-73,-61,-62,-24,-19,-78,-18,]),'^':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,52,58,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,95,97,99,101,104,105,108,114,117,124,],[-1,-3,-80,-79,-46,50,-5,-36,-74,-75,-76,-77,-78,-16,-37,-57,-15,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,-25,-20,-72,-73,-61,-62,-24,-19,-78,-18,]),'POW':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,52,58,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,95,97,99,101,104,105,108,114,117,124,],[-1,-3,-80,-79,-46,51,-5,-36,-74,-75,-76,-77,-78,-16,-37,-57,-15,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,-25,-20,-72,-73,-61,-62,-24,-19,-78,-18,]),'LT':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,52,58,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,95,97,99,101,104,105,108,114,117,124,],[-1,-3,-80,-79,37,-56,-5,-36,-74,-75,-76,-77,-78,-16,-37,-57,-15,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,-25,-20,-72,-73,-61,-62,-24,-19,-78,-18,]),'LE':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,52,58,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,95,97,99,101,104,105,108,114,117,124,],[-1,-3,-80,-79,38,-56,-5,-36,-74,-75,-76,-77,-78,-16,-37,-57,-15,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,-25,-20,-72,-73,-61,-62,-24,-19,-78,-18,]),'GT':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,52,58,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,95,97,99,101,104,105,108,114,117,124,],[-1,-3,-80,-79,39,-56,-5,-36,-74,-75,-76,-77,-78,-16,-37,-57,-15,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,-25,-20,-72,-73,-61,-62,-24,-19,-78,-18,]),'GE':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,52,58,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,95,97,99,101,104,105,108,114,117,124,],[-1,-3,-80,-79,40,-56,-5,-36,-74,-75,-76,-77,-78,-16,-37,-57,-15,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,-25,-20,-72,-73,-61,-62,-24,-19,-78,-18,]),'EE':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,52,58,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,95,97,99,101,104,105,108,114,117,124,],[-1,-3,-80,-79,41,-56,-5,-36,-74,-75,-76,-77,-78,-16,-37,-57,-15,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,-25,-20,-72,-73,-61,-62,-24,-19,-78,-18,]),'NE':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,52,58,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,95,97,99,101,104,105,108,114,117,124,],[-1,-3,-80,-79,42,-56,-5,-36,-74,-75,-76,-77,-78,-16,-37,-57,-15,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,-25,-20,-72,-73,-61,-62,-24,-19,-78,-18,]),'#':([7,8,9,12,14,15,20,21,22,23,24,25,26,27,36,52,58,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,92,95,97,99,101,104,105,107,108,114,124,],[-1,-3,-80,-79,-46,-56,-5,-36,-74,-75,-76,-77,-78,-16,-37,-57,-15,-21,-2,-44,-45,-63,-38,-39,-40,-41,-42,-43,-47,-48,-49,-50,-51,-52,-53,-54,-55,-4,-13,-14,106,-25,-20,-72,-73,-61,-62,-17,-24,-19,-18,]),'=':([8,20,117,134,],[31,57,125,125,]),'[':([17,],[53,]),'TAG':([58,61,95,97,108,114,],[93,-21,-25,-20,-24,93,]),'ELSEIF':([61,97,110,136,],[-21,-20,120,120,]),'ELSE':([61,97,110,136,],[-21,-20,121,121,]),':':([85,86,],[102,103,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expressions':([0,2,28,],[1,29,60,]),'statement':([0,2,28,],[2,2,2,]),'expression':([0,2,6,11,28,31,34,53,55,56,57,59,93,100,102,103,109,125,126,],[4,4,30,35,4,62,65,83,83,83,89,96,107,83,112,113,96,130,131,]),'if_condition':([0,2,28,],[5,5,5,]),'comp':([0,2,6,11,13,28,31,32,33,34,53,55,56,57,59,93,100,102,103,109,125,126,],[9,9,9,9,36,9,9,63,64,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'scope':([0,2,6,11,13,16,28,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,58,59,93,98,100,102,103,106,109,121,125,126,133,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,90,12,12,110,12,12,12,114,12,127,12,12,136,]),'arith':([0,2,6,11,13,28,31,32,33,34,37,38,39,40,41,42,53,55,56,57,59,93,100,102,103,109,125,126,],[14,14,14,14,14,14,14,14,14,14,67,68,69,70,71,72,14,14,14,14,14,14,14,14,14,14,14,14,]),'atom':([0,2,6,11,13,16,28,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,59,93,100,102,103,109,125,126,],[15,15,15,15,15,52,15,15,15,15,15,15,15,15,15,15,15,73,74,75,76,77,78,79,80,81,15,15,15,15,15,15,15,15,15,15,15,15,]),'function_call':([0,2,6,11,13,16,28,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,59,93,100,102,103,109,125,126,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'table':([0,2,6,11,13,16,28,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,59,93,100,102,103,109,125,126,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'parameters':([27,],[58,]),'comma_expressions':([53,55,56,100,],[82,87,88,111,]),'table_contents':([54,122,123,],[84,128,129,]),'tag_list':([58,114,],[91,124,]),'tag':([58,114,],[92,92,]),'param_element':([59,109,],[94,115,]),'param_element_pos':([109,132,],[116,135,]),'elif_branch':([110,136,],[118,137,]),'else_branch':([110,136,],[119,138,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expressions","S'",1,None,None,None),
  ('expression -> PASS','expression',1,'p_pass','EngineScript.py',172),
  ('expression -> MACRO = expression','expression',3,'p_macro_statement','EngineScript.py',176),
  ('expression -> MACRO','expression',1,'p_macro_statement','EngineScript.py',177),
  ('atom -> VARIABLE = expression','atom',3,'p_statement_assign','EngineScript.py',188),
  ('atom -> VARIABLE','atom',1,'p_statement_assign','EngineScript.py',189),
  ('else_branch -> ELSE scope','else_branch',2,'p_else_branch','EngineScript.py',203),
  ('elif_branch -> ELSEIF ( expression ) scope elif_branch','elif_branch',6,'p_elif_branch','EngineScript.py',209),
  ('elif_branch -> ELSEIF ( expression ) scope else_branch','elif_branch',6,'p_elif_branch','EngineScript.py',210),
  ('elif_branch -> ELSEIF ( expression ) scope','elif_branch',5,'p_elif_branch','EngineScript.py',211),
  ('if_condition -> IF ( expression ) scope elif_branch','if_condition',6,'p_if_statement','EngineScript.py',223),
  ('if_condition -> IF ( expression ) scope else_branch','if_condition',6,'p_if_statement','EngineScript.py',224),
  ('if_condition -> IF ( expression ) scope','if_condition',5,'p_if_statement','EngineScript.py',225),
  ('function_call -> FUNCTION parameters scope','function_call',3,'p_function_call','EngineScript.py',235),
  ('function_call -> FUNCTION parameters tag_list','function_call',3,'p_function_call','EngineScript.py',236),
  ('function_call -> FUNCTION parameters','function_call',2,'p_function_call','EngineScript.py',237),
  ('function_call -> FUNCTION','function_call',1,'p_function_call','EngineScript.py',238),
  ('tag -> TAG expression','tag',2,'p_tag','EngineScript.py',428),
  ('tag_list -> tag # scope tag_list','tag_list',4,'p_tag_list','EngineScript.py',435),
  ('tag_list -> tag # scope','tag_list',3,'p_tag_list','EngineScript.py',436),
  ('scope -> { expressions }','scope',3,'p_scope','EngineScript.py',450),
  ('scope -> { }','scope',2,'p_scope','EngineScript.py',451),
  ('expressions -> statement expressions','expressions',2,'p_statements','EngineScript.py',458),
  ('expressions -> statement','expressions',1,'p_statements','EngineScript.py',459),
  ('parameters -> ( param_element )','parameters',3,'p_parameters','EngineScript.py',482),
  ('parameters -> ( )','parameters',2,'p_parameters','EngineScript.py',483),
  ('param_element_pos -> WORD = expression , param_element_pos','param_element_pos',5,'p_param_element2','EngineScript.py',490),
  ('param_element_pos -> WORD = expression ,','param_element_pos',4,'p_param_element2','EngineScript.py',491),
  ('param_element_pos -> WORD = expression','param_element_pos',3,'p_param_element2','EngineScript.py',492),
  ('param_element -> expression , param_element','param_element',3,'p_param_element','EngineScript.py',503),
  ('param_element -> expression , param_element_pos','param_element',3,'p_param_element','EngineScript.py',504),
  ('param_element -> expression ,','param_element',2,'p_param_element','EngineScript.py',505),
  ('param_element -> expression','param_element',1,'p_param_element','EngineScript.py',506),
  ('statement -> BREAK','statement',1,'p_statement_break','EngineScript.py',517),
  ('statement -> expression','statement',1,'p_statement_expr','EngineScript.py',521),
  ('statement -> if_condition','statement',1,'p_statement_expr','EngineScript.py',522),
  ('atom -> function_call','atom',1,'p_expression_function_call','EngineScript.py',526),
  ('comp -> NOT comp','comp',2,'p_comp_expression','EngineScript.py',530),
  ('comp -> arith LT arith','comp',3,'p_comp_expression','EngineScript.py',531),
  ('comp -> arith LE arith','comp',3,'p_comp_expression','EngineScript.py',532),
  ('comp -> arith GT arith','comp',3,'p_comp_expression','EngineScript.py',533),
  ('comp -> arith GE arith','comp',3,'p_comp_expression','EngineScript.py',534),
  ('comp -> arith EE arith','comp',3,'p_comp_expression','EngineScript.py',535),
  ('comp -> arith NE arith','comp',3,'p_comp_expression','EngineScript.py',536),
  ('comp -> comp AND comp','comp',3,'p_comp_expression','EngineScript.py',537),
  ('comp -> comp OR comp','comp',3,'p_comp_expression','EngineScript.py',538),
  ('comp -> arith','comp',1,'p_comp_expression','EngineScript.py',539),
  ('arith -> atom + atom','arith',3,'p_expression_binop','EngineScript.py',588),
  ('arith -> atom - atom','arith',3,'p_expression_binop','EngineScript.py',589),
  ('arith -> atom * atom','arith',3,'p_expression_binop','EngineScript.py',590),
  ('arith -> atom / atom','arith',3,'p_expression_binop','EngineScript.py',591),
  ('arith -> atom % atom','arith',3,'p_expression_binop','EngineScript.py',592),
  ('arith -> atom & atom','arith',3,'p_expression_binop','EngineScript.py',593),
  ('arith -> atom | atom','arith',3,'p_expression_binop','EngineScript.py',594),
  ('arith -> atom ^ atom','arith',3,'p_expression_binop','EngineScript.py',595),
  ('arith -> atom POW atom','arith',3,'p_expression_binop','EngineScript.py',596),
  ('arith -> atom','arith',1,'p_expression_binop','EngineScript.py',597),
  ('atom -> - atom','atom',2,'p_expression_uminus','EngineScript.py',638),
  ('comma_expressions -> expression , comma_expressions','comma_expressions',3,'p_comma_sep_expressions','EngineScript.py',649),
  ('comma_expressions -> expression ,','comma_expressions',2,'p_comma_sep_expressions','EngineScript.py',650),
  ('comma_expressions -> expression','comma_expressions',1,'p_comma_sep_expressions','EngineScript.py',651),
  ('arith -> MIN ( comma_expressions )','arith',4,'p_expression_min','EngineScript.py',658),
  ('arith -> MAX ( comma_expressions )','arith',4,'p_expression_min','EngineScript.py',659),
  ('atom -> ( expression )','atom',3,'p_expression_group','EngineScript.py',671),
  ('statement -> RETURN expression','statement',2,'p_expression_return','EngineScript.py',675),
  ('statement -> RETURN','statement',1,'p_expression_return','EngineScript.py',676),
  ('table_contents -> STRING : expression , table_contents','table_contents',5,'p_table_contents','EngineScript.py',683),
  ('table_contents -> NUMBER : expression , table_contents','table_contents',5,'p_table_contents','EngineScript.py',684),
  ('table_contents -> STRING : expression ,','table_contents',4,'p_table_contents','EngineScript.py',685),
  ('table_contents -> NUMBER : expression ,','table_contents',4,'p_table_contents','EngineScript.py',686),
  ('table_contents -> STRING : expression','table_contents',3,'p_table_contents','EngineScript.py',687),
  ('table_contents -> NUMBER : expression','table_contents',3,'p_table_contents','EngineScript.py',688),
  ('table -> % [ comma_expressions ]','table',4,'p_table','EngineScript.py',700),
  ('table -> % { table_contents }','table',4,'p_table','EngineScript.py',701),
  ('atom -> NUMBER','atom',1,'p_expression_other','EngineScript.py',716),
  ('atom -> BOOLEAN','atom',1,'p_expression_other','EngineScript.py',717),
  ('atom -> STRING','atom',1,'p_expression_other','EngineScript.py',718),
  ('atom -> table','atom',1,'p_expression_other','EngineScript.py',719),
  ('atom -> WORD','atom',1,'p_expression_other','EngineScript.py',720),
  ('atom -> scope','atom',1,'p_expression_other','EngineScript.py',721),
  ('expression -> comp','expression',1,'p_expression_comp','EngineScript.py',728),
]
