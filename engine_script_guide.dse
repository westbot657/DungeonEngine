
// this is a guide on how engine script works




// keywords:
for ... in ... {} // only used to iterate through lists or dicts (for now at least)
while (...) {} // a normal while loop
if (...) {}
elif (...) {}
else {}
return ... // used to return early from your script or a function, can optionally have an expression after to be returned
break // breaks from a for/while loop, ending iteration early
pass // does nothing

// constant values:
true
false
none

// math operators:
+  // add
-  // subtract
*  // multiply
/  // divide
** // exponent

// comparison operators:
>  // greater than
>= // greater or equal
== // equal to
<  // less than
<= // less or equal
!= // not equal
not
or
and


// variable syntax:

/// defining a variable:
<num> = 5

/// defining a list:
<list> = %[
    "0",
    "1",
    "2"
]
/// accessing a list:
<i> = <list>[0]

<sub_list> = subset(<list>, 1, 2) // returns %["1", "2"]

/// defining a dict:
<dict> = %{
    "key": "value",
    "key2": "value2"
}
/// accessing a dict:
<i> = <dict>["key2"]


// different kinds of variables:

<local_variable>
<#global_variable>
<%global/constant> // this variable can not be re-assigned
<$function_variable> // this calls the function named 'function_variable' (if it exists)
</$funtion_code_variable> // this references the compiled code of 'function_variable' (if it exists)

<local_variable.attribute> // some variables can have attributes (more complex vars like player or combat)
<local_variable.attribute?> // optional var. If local_variable doesn't have the attribute 'attribute', it returns none

<local.attr1.attr2?.attr3>
// attr2 is marked as optional,
// if local or local.attr1 is not defined, an error will occur,
// if attr2 or any sub-attribute after it is undefined, `none` will be returned









